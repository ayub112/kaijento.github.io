<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shiori</title>
    <description></description>
    <link>http://kaijento.github.io/</link>
    <atom:link href="http://kaijento.github.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 18 Apr 2017 19:00:17 +0100</pubDate>
    <lastBuildDate>Tue, 18 Apr 2017 19:00:17 +0100</lastBuildDate>
    <generator>Jekyll v3.3.1</generator>
    
      <item>
        <title>bash: add line from file1 to end of lines in file2</title>
        <description>&lt;p&gt;&lt;em&gt;I have file1 that contains a single line how do I add this
line to the end of all lines in file2?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Let’s create our 2 test files.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;cat file1
    line from file1
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;cat file2
1
2
3
4
5
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We could use a &lt;code class=&quot;highlighter-rouge&quot;&gt;while read&lt;/code&gt; loop:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;IFS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;; &lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; -r line1 &amp;lt; file1; &lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; -r line; &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$line$line1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt; &amp;lt; file2 &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
1    line from file1
2    line from file1
3    line from file1
4    line from file1
5    line from file1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We are creating an explicit subshell here with the surrounding &lt;code class=&quot;highlighter-rouge&quot;&gt;()&lt;/code&gt; as we’re 
modifying the &lt;code class=&quot;highlighter-rouge&quot;&gt;IFS&lt;/code&gt; variable and don’t want to modify it for our current shell.&lt;/p&gt;

&lt;p&gt;We’re setting &lt;code class=&quot;highlighter-rouge&quot;&gt;IFS&lt;/code&gt; to an empty value as to not strip any possible leading or
trailing whitespace.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; -r line1 &amp;lt; file1; &lt;span class=&quot;nb&quot;&gt;declare&lt;/span&gt; -p line1
&lt;span class=&quot;nb&quot;&gt;declare&lt;/span&gt; -- &lt;span class=&quot;nv&quot;&gt;line1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;line from file1&quot;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;IFS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; -r line1 &amp;lt; file1; &lt;span class=&quot;nb&quot;&gt;declare&lt;/span&gt; -p line1
&lt;span class=&quot;nb&quot;&gt;declare&lt;/span&gt; -- &lt;span class=&quot;nv&quot;&gt;line1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;    line from file1&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Another approach could be to use &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;awk &lt;span class=&quot;s1&quot;&gt;'NR == FNR { line = $0; next } $0 = $0 line'&lt;/span&gt; file1 file2
1    line from file1
2    line from file1
3    line from file1
4    line from file1
5    line from file1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NR&lt;/code&gt; in the current record number (records by default in &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; are lines) and 
&lt;code class=&quot;highlighter-rouge&quot;&gt;FNR&lt;/code&gt; is the current record number of the current file. This means that 
&lt;code class=&quot;highlighter-rouge&quot;&gt;NR == FNR&lt;/code&gt; will be true when the first file is being processed.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$0&lt;/code&gt; is the current record content and &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; will implicitly join strings
for us. It’s as if we did &lt;code class=&quot;highlighter-rouge&quot;&gt;printf(&quot;%s%s\n&quot;, $0, line)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Because we know that &lt;code class=&quot;highlighter-rouge&quot;&gt;file1&lt;/code&gt; only has a single line we could simplify the command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;awk &lt;span class=&quot;s1&quot;&gt;'BEGIN { getline line } $0 = $0 line'&lt;/span&gt; file1 file2
1    line from file1
2    line from file1
3    line from file1
4    line from file1
5    line from file1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If we wanted to modify &lt;code class=&quot;highlighter-rouge&quot;&gt;file2&lt;/code&gt; with the updated changes we could
use &lt;code class=&quot;highlighter-rouge&quot;&gt;perl&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;perl -pe &lt;span class=&quot;s1&quot;&gt;'BEGIN { chomp($line = `cat file1`) } s/$/$line/'&lt;/span&gt; file2
1    line from file1
2    line from file1
3    line from file1
4    line from file1
5    line from file1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We can also add the &lt;code class=&quot;highlighter-rouge&quot;&gt;-i&lt;/code&gt; option to overwrite
the original file e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;perl -pi -e '...'&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We’re shelling out to &lt;code class=&quot;highlighter-rouge&quot;&gt;cat&lt;/code&gt; here as it’s less code. You could &lt;code class=&quot;highlighter-rouge&quot;&gt;open&lt;/code&gt;
the file without shelling out if you wished.&lt;/p&gt;

&lt;p&gt;Recent versions of GNU &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt; have &lt;code class=&quot;highlighter-rouge&quot;&gt;-i inplace&lt;/code&gt; which can also overwrite 
the original file however you would have to modify the command as we’re
passing it 2 filenames as arguments.&lt;/p&gt;
</description>
        <pubDate>Tue, 18 Apr 2017 18:33:04 +0100</pubDate>
        <link>http://kaijento.github.io/2017/04/18/bash-add-line-from-file/</link>
        <guid isPermaLink="true">http://kaijento.github.io/2017/04/18/bash-add-line-from-file/</guid>
        
        <category>bash</category>
        
        <category>awk</category>
        
        <category>perl</category>
        
        
      </item>
    
      <item>
        <title>bash: mv all except ...</title>
        <description>&lt;p&gt;&lt;em&gt;I have the directory structure &lt;code class=&quot;highlighter-rouge&quot;&gt;A/B&lt;/code&gt; how do I &lt;code class=&quot;highlighter-rouge&quot;&gt;mv&lt;/code&gt; everything
inside &lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt; down 1 level into &lt;code class=&quot;highlighter-rouge&quot;&gt;B&lt;/code&gt;?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This is essentially asking &lt;em&gt;“How do I move everything except X?”&lt;em&gt;&lt;/em&gt;&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;find&quot;&gt;find&lt;/h2&gt;

&lt;p&gt;There are many ways to approach this task. I think the simplest
solution is to use &lt;code class=&quot;highlighter-rouge&quot;&gt;find&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;(note: We’re using GNU find here)&lt;/small&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;find A
A
A/B
A/-foo
A/bar
A/.baz
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We can use &lt;code class=&quot;highlighter-rouge&quot;&gt;-mindepth 1&lt;/code&gt; to remove the search directory from the results&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;find A -mindepth 1
A/B
A/-foo
A/bar
A/.baz
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In our example structure &lt;code class=&quot;highlighter-rouge&quot;&gt;B&lt;/code&gt; contains no subdirectories. If it did we would
want to also use &lt;code class=&quot;highlighter-rouge&quot;&gt;-maxdepth 1&lt;/code&gt; to prevent &lt;code class=&quot;highlighter-rouge&quot;&gt;find&lt;/code&gt; from descending into 
subdirectories.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;find A -mindepth 1 
A/B
A/B/C
A/bar
A/.baz
A/-foo
A/D
A/D/E
A/D/E/F
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;find A -mindepth 1 -maxdepth 1
A/B
A/bar
A/.baz
A/-foo
A/D
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We will keep &lt;code class=&quot;highlighter-rouge&quot;&gt;-maxdepth 1&lt;/code&gt; in our command for the sake of &lt;em&gt;“completeness”&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;To filter out &lt;code class=&quot;highlighter-rouge&quot;&gt;B&lt;/code&gt; we can use &lt;code class=&quot;highlighter-rouge&quot;&gt;-not -name B&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;find A -mindepth 1 -not -name B
A/-foo
A/bar
A/.baz
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If we wanted to filter out multiple names one option is to use the
&lt;code class=&quot;highlighter-rouge&quot;&gt;\( -not -name B -or -not -name C \)&lt;/code&gt; syntax.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;find&lt;/code&gt; lists &lt;em&gt;“hidden”&lt;/em&gt; entries too so when you say
&lt;em&gt;“all”&lt;/em&gt; we assume you mean hidden entries too.&lt;/p&gt;

&lt;p&gt;You could add in a &lt;code class=&quot;highlighter-rouge&quot;&gt;-not -name '.*'&lt;/code&gt;
if you wanted to filter out hidden entries.&lt;/p&gt;

&lt;p&gt;Finally we can use &lt;code class=&quot;highlighter-rouge&quot;&gt;-exec&lt;/code&gt; to execute &lt;code class=&quot;highlighter-rouge&quot;&gt;mv&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;find A -mindepth 1 -maxdepth 1 -not -name B -exec mv -v -t A/B &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; +
‘A/-foo’ -&amp;gt; ‘A/B/-foo’
‘A/bar’  -&amp;gt; ‘A/B/bar’
‘A/.baz’ -&amp;gt; ‘A/B/.baz’
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;inside an &lt;code class=&quot;highlighter-rouge&quot;&gt;-exec&lt;/code&gt; clause &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;/code&gt; is replaced with each &lt;em&gt;“item”&lt;/em&gt; found. 
You may like to think of it as a &lt;em&gt;“placeholder”&lt;/em&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;GNU &lt;code class=&quot;highlighter-rouge&quot;&gt;mv&lt;/code&gt; has &lt;code class=&quot;highlighter-rouge&quot;&gt;-t&lt;/code&gt; which takes the &lt;em&gt;target&lt;/em&gt; as an argument. it allows you
to &lt;code class=&quot;highlighter-rouge&quot;&gt;mv&lt;/code&gt; multiples files somewhere in a single &lt;code class=&quot;highlighter-rouge&quot;&gt;mv&lt;/code&gt; call.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;em&gt;“portable”&lt;/em&gt; way to write it without &lt;code class=&quot;highlighter-rouge&quot;&gt;-t&lt;/code&gt; would be:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;find A -mindepth 1 -maxdepth 1 -not -name B -exec mv -v &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; A/B &lt;span class=&quot;se&quot;&gt;\;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;When &lt;code class=&quot;highlighter-rouge&quot;&gt;-exec&lt;/code&gt; is ended by &lt;code class=&quot;highlighter-rouge&quot;&gt;;&lt;/code&gt; (we need &lt;code class=&quot;highlighter-rouge&quot;&gt;\;&lt;/code&gt; to stop the shell from interpreting the &lt;code class=&quot;highlighter-rouge&quot;&gt;;&lt;/code&gt;)
the &lt;code class=&quot;highlighter-rouge&quot;&gt;-exec&lt;/code&gt; clause is executed once per item found. When &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; is used the &lt;code class=&quot;highlighter-rouge&quot;&gt;-exec&lt;/code&gt; clause
is executed as many times as needed. Multiple arguments are passed to the command being
executed similar to how &lt;code class=&quot;highlighter-rouge&quot;&gt;xargs&lt;/code&gt; works.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;find 
.
./a
./b
./c
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;find -exec &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\;&lt;/span&gt;
.
./a
./b
./c
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;find -exec &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; +
. ./a ./b ./c
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As you can see with &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; the &lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt; was only executed once. There is a limit on the size
of a command line which you can see with &lt;code class=&quot;highlighter-rouge&quot;&gt;getconf ARG_MAX&lt;/code&gt; so it will fill as many 
arguments in as possible on each execution.&lt;/p&gt;

&lt;h2 id=&quot;globbing&quot;&gt;globbing&lt;/h2&gt;

&lt;p&gt;As well as find you can use bash’s &lt;em&gt;globbing&lt;/em&gt; to achieve the same result.
You can use &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; to say &lt;em&gt;“all”&lt;/em&gt; &lt;small&gt;(although it wont match &lt;em&gt;“hidden”&lt;/em&gt;
entries unless &lt;code class=&quot;highlighter-rouge&quot;&gt;dotglob&lt;/code&gt; is enabled)&lt;/small&gt; you can use &lt;code class=&quot;highlighter-rouge&quot;&gt;!(pattern)&lt;/code&gt; to say 
&lt;em&gt;“everything but pattern” &lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This is not part of the standard globbing syntax and needs &lt;code class=&quot;highlighter-rouge&quot;&gt;extglob&lt;/code&gt; enabled to work.&lt;/p&gt;

&lt;p&gt;&lt;small&gt;(note: You can also supply multiple patterns separated by &lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt; e.g &lt;code class=&quot;highlighter-rouge&quot;&gt;!(foo|bar)&lt;/code&gt;)&lt;/small&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;A
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;shopt&lt;/span&gt; -s extglob
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; !&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;B&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
bar -foo
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We need to enable &lt;code class=&quot;highlighter-rouge&quot;&gt;dotglob&lt;/code&gt; to allow globs to match hidden entries.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;shopt&lt;/span&gt; -s dotglob
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; !&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;B&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
bar .baz -foo
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;It’s also useful to enable &lt;code class=&quot;highlighter-rouge&quot;&gt;nullglob&lt;/code&gt; to prevent any possible
errors if there are no matches to the glob. You can enable
all three at the same time.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;shopt&lt;/span&gt; -s dotglob extglob nullglob
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Let’s try to &lt;code class=&quot;highlighter-rouge&quot;&gt;mv&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;mv -v -t B !&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;B&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
mv: invalid option -- &lt;span class=&quot;s1&quot;&gt;'o'&lt;/span&gt;
Try &lt;span class=&quot;s1&quot;&gt;'mv --help'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;more information.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The problem here is that the leading dash in &lt;code class=&quot;highlighter-rouge&quot;&gt;-foo&lt;/code&gt; is being
interpreted as an option by &lt;code class=&quot;highlighter-rouge&quot;&gt;mv&lt;/code&gt; we can use the &lt;em&gt;“double dash”&lt;/em&gt; 
&lt;code class=&quot;highlighter-rouge&quot;&gt;--&lt;/code&gt; to indiciate the end of command line options.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;mv -v -t B -- !&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;B&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
‘bar’  -&amp;gt; ‘B/bar’
‘.baz’ -&amp;gt; ‘B/.baz’
‘-foo’ -&amp;gt; ‘B/-foo’
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Another option is to use the full path in our glob by prepending
&lt;code class=&quot;highlighter-rouge&quot;&gt;./&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; ./!&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;B&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
./bar ./.baz ./-foo
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;mv -v -t B ./!&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;B&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
‘./bar’  -&amp;gt; ‘B/bar’
‘./.baz’ -&amp;gt; ‘B/.baz’
‘./-foo’ -&amp;gt; ‘B/-foo’
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As mentioned there are other approaches for example you
could &lt;code class=&quot;highlighter-rouge&quot;&gt;mv B&lt;/code&gt; somewhere temporarily out of &lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt; then use
&lt;code class=&quot;highlighter-rouge&quot;&gt;mv A/* path/to/B&lt;/code&gt; and finally &lt;code class=&quot;highlighter-rouge&quot;&gt;mv B&lt;/code&gt; back into &lt;code class=&quot;highlighter-rouge&quot;&gt;A&lt;/code&gt;.
Again note the use of &lt;code class=&quot;highlighter-rouge&quot;&gt;dotglob&lt;/code&gt; if you want “hidden” 
entries to be matched.&lt;/p&gt;

&lt;p&gt;Another option could be to use &lt;code class=&quot;highlighter-rouge&quot;&gt;rsync&lt;/code&gt;. I personally 
prefer the &lt;code class=&quot;highlighter-rouge&quot;&gt;find&lt;/code&gt; the most straightforward approach but 
YMMV.&lt;/p&gt;
</description>
        <pubDate>Tue, 18 Apr 2017 13:40:12 +0100</pubDate>
        <link>http://kaijento.github.io/2017/04/18/bash-mv-all-except/</link>
        <guid isPermaLink="true">http://kaijento.github.io/2017/04/18/bash-mv-all-except/</guid>
        
        <category>bash</category>
        
        <category>find</category>
        
        <category>glob</category>
        
        <category>linux</category>
        
        
      </item>
    
      <item>
        <title>Parsing XML with Python</title>
        <description>&lt;p&gt;We’re given the task of parsing XML and turning it into CSV
using Python. Due to the size of the data it cannot be
loaded directly into memory which means we cannot use an 
XML parser (or does it?)&lt;/p&gt;

&lt;p&gt;In cases where we have multiple subtags they need to be merged 
into a single column / cell in the final CSV output.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;Record&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;EA&amp;gt;&lt;/span&gt;9780415836661&lt;span class=&quot;nt&quot;&gt;&amp;lt;/EA&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;I3&amp;gt;&lt;/span&gt;9780415836661&lt;span class=&quot;nt&quot;&gt;&amp;lt;/I3&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;TI&amp;gt;&lt;/span&gt;Applied Multivariate Statistics for the Social Sciences&lt;span class=&quot;nt&quot;&gt;&amp;lt;/TI&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;ST&amp;gt;&lt;/span&gt;Analyses with SAS and Ibm's SPSS&lt;span class=&quot;nt&quot;&gt;&amp;lt;/ST&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;AUS&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;AU&amp;gt;&lt;/span&gt;Pituch, Keenan A.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/AU&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;AU&amp;gt;&lt;/span&gt;Stevens, James P.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/AU&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/AUS&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;BCS&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;BC&amp;gt;&lt;/span&gt;JHBC&lt;span class=&quot;nt&quot;&gt;&amp;lt;/BC&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/BCS&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;BI&amp;gt;&lt;/span&gt;Paperback&lt;span class=&quot;nt&quot;&gt;&amp;lt;/BI&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;CO&amp;gt;&lt;/span&gt;United Kingdom&lt;span class=&quot;nt&quot;&gt;&amp;lt;/CO&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;MP&amp;gt;&lt;/span&gt;No&lt;span class=&quot;nt&quot;&gt;&amp;lt;/MP&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;PD&amp;gt;&lt;/span&gt;20160105&lt;span class=&quot;nt&quot;&gt;&amp;lt;/PD&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;PA&amp;gt;&lt;/span&gt;814 pages, 352 black &lt;span class=&quot;ni&quot;&gt;&amp;amp;amp;&lt;/span&gt; white tables, 65 black &lt;span class=&quot;ni&quot;&gt;&amp;amp;amp;&lt;/span&gt; white halftones&lt;span class=&quot;nt&quot;&gt;&amp;lt;/PA&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;NP&amp;gt;&lt;/span&gt;814&lt;span class=&quot;nt&quot;&gt;&amp;lt;/NP&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;RP&amp;gt;&lt;/span&gt;62.99&lt;span class=&quot;nt&quot;&gt;&amp;lt;/RP&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;RI&amp;gt;&lt;/span&gt;62.99&lt;span class=&quot;nt&quot;&gt;&amp;lt;/RI&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;RE&amp;gt;&lt;/span&gt;62.99&lt;span class=&quot;nt&quot;&gt;&amp;lt;/RE&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;DI&amp;gt;&lt;/span&gt;181 x 255 x 41&lt;span class=&quot;nt&quot;&gt;&amp;lt;/DI&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;EI&amp;gt;&lt;/span&gt;6 Rev ed&lt;span class=&quot;nt&quot;&gt;&amp;lt;/EI&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;PU&amp;gt;&lt;/span&gt;Taylor &lt;span class=&quot;ni&quot;&gt;&amp;amp;amp;&lt;/span&gt; Francis Ltd&lt;span class=&quot;nt&quot;&gt;&amp;lt;/PU&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;YP&amp;gt;&lt;/span&gt;2016&lt;span class=&quot;nt&quot;&gt;&amp;lt;/YP&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;RSS&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;RS&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;RC=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;P&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Professional &lt;span class=&quot;ni&quot;&gt;&amp;amp;amp;&lt;/span&gt; Vocational&lt;span class=&quot;nt&quot;&gt;&amp;lt;/RS&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/RSS&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;IU&amp;gt;&lt;/span&gt;352 black &lt;span class=&quot;ni&quot;&gt;&amp;amp;amp;&lt;/span&gt; white tables, 65 black &lt;span class=&quot;ni&quot;&gt;&amp;amp;amp;&lt;/span&gt; white halftones&lt;span class=&quot;nt&quot;&gt;&amp;lt;/IU&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;RF&amp;gt;&lt;/span&gt;R&lt;span class=&quot;nt&quot;&gt;&amp;lt;/RF&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;WE&amp;gt;&lt;/span&gt;1464&lt;span class=&quot;nt&quot;&gt;&amp;lt;/WE&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;SG&amp;gt;&lt;/span&gt;2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/SG&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Record&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So here the multiple &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;AU&amp;gt;&lt;/code&gt; values need to be merged as a single “cell” 
separated by a space.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;EA&amp;gt;&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;I3&amp;gt;&lt;/code&gt; numbers need to be reformatted into scientific 
notation e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;9.78E+12&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;All tags may not be present in each record and they should be given an empty
value in the final CSV row. We’ve been given a full list of the possible
tag names we need to process.&lt;/p&gt;

&lt;h2 id=&quot;parsing-xml-with-regex&quot;&gt;parsing XML with regex&lt;/h2&gt;

&lt;p&gt;The sample data we are given looks well formed and has 1 tag per line
so perhaps we could try to process it line by line and use regular 
expressions to parse out the bits we need.&lt;/p&gt;

&lt;p&gt;Yes, regular expressions. Yes, you’re not supposed to use them like 
&lt;em&gt;evar!!&lt;/em&gt; Yes, you’re not supposed to use them on XML, etc. etc.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;csv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;fileinput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;fieldnames&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'EA'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'I3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'TP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'TI'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'ST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'ED'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'AU'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;'TR'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'BC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'BI'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'CO'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'MP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'PD'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'PA'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;'NP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'RP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'RI'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'RE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'DI'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'EI'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'PU'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;'YP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'RS'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'SR'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'IU'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'DE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'RF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'WE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;'SG'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'IB'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'AV'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'PI'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'GC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'NC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'IL'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;'CP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'LA'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'RC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'SE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'PT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'PN'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'SI'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;csv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DictWriter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fieldnames&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fieldnames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writeheader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileinput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&amp;amp;amp;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;amp;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'^&amp;lt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;S+)[^&amp;gt;]*&amp;gt;([^&amp;lt;]+)&amp;lt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;1&amp;gt;$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'EA'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'I3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%.2&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;E'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;lt;/Record&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writerow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The regular &lt;code class=&quot;highlighter-rouge&quot;&gt;csv.writer&lt;/code&gt; deals with lists. If you do not
have the correct amount of values in your list you would have
to manually add empty values for the missing columns.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;csv.DictWriter&lt;/code&gt; instead deals with dicts and because it’s given the list
of column names / headers / &lt;em&gt;“fieldnames”&lt;/em&gt; when being created
it knows if any columns are missing and replaces them with empty values
automatically.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;fileinput&lt;/code&gt; module allows us to easily process files passed as a command-line 
argument. It can be used for more than that, though.&lt;/p&gt;

&lt;p&gt;We’re writing the output to &lt;code class=&quot;highlighter-rouge&quot;&gt;sys.stdout&lt;/code&gt; for demonstration purposes but you can
write it to an actual file if you wish. See the &lt;code class=&quot;highlighter-rouge&quot;&gt;csv&lt;/code&gt; docs for examples on how
to do so.&lt;/p&gt;

&lt;p&gt;So the regex we’re using searches for a line that contains an opening
tag (with possible attributes) followed by some content followed
by a closing tag.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'^&amp;lt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;S+)[^&amp;gt;]*&amp;gt;([^&amp;lt;]+)&amp;lt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;1&amp;gt;$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;lt;AU&amp;gt;blah blah&amp;lt;/AU&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'AU'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'blah blah'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'^&amp;lt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;S+)[^&amp;gt;]*&amp;gt;([^&amp;lt;]+)&amp;lt;/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;1&amp;gt;$'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&amp;lt;/Record&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Traceback&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;most&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recent&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;stdin&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;AttributeError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'NoneType'&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;has&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;no&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;attribute&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'groups'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;^&lt;/code&gt; matches the start of the string&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;(\S+)&lt;/code&gt; matches and captures a sequence of 1 or more non-whitespace characters i.e. the tag name&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[^&amp;gt;]*&lt;/code&gt; matches a sequence of 0 or more characters that are not &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt; this allows for possible
attributes e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;RS RC=&quot;P&quot;&amp;gt;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;([^&amp;lt;]+)&lt;/code&gt; matches and captures a sequence of 1 or more characters that are not &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&lt;/code&gt; i.e. the tag content&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;/\1&amp;gt;&lt;/code&gt; matches &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;/&lt;/code&gt; followed by the contents capture group 1 followed by &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt; i.e. the closing of the tag we previously matched&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt; matches the end of the string&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So if we find a matching line with that we extract the tag name and content.
We then check if we need to reformat i.e. is it an &lt;code class=&quot;highlighter-rouge&quot;&gt;EA&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;I3&lt;/code&gt; and add the
content to the row or &lt;em&gt;“merge”&lt;/em&gt; the content if there is a value
already contained in the row for that tag.&lt;/p&gt;

&lt;p&gt;Because &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;/Record&amp;gt;&lt;/code&gt; is on a line on its own and the regex wont match it
we need to use &lt;code class=&quot;highlighter-rouge&quot;&gt;elif&lt;/code&gt; to specifically check for it.&lt;/p&gt;

&lt;p&gt;If we find a &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;/Record&amp;gt;&lt;/code&gt; line we write the contents of &lt;code class=&quot;highlighter-rouge&quot;&gt;row&lt;/code&gt; set it back
to an empty dict to hold the next row’s values.&lt;/p&gt;

&lt;p&gt;The output is rather large so we’ll just show a few of the columns that
display the &lt;em&gt;“special cases”&lt;/em&gt; namely &lt;code class=&quot;highlighter-rouge&quot;&gt;EA&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;I3&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;AU&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;EA&lt;/th&gt;
      &lt;th&gt;I3&lt;/th&gt;
      &lt;th&gt;TP&lt;/th&gt;
      &lt;th&gt;TI&lt;/th&gt;
      &lt;th&gt;ST&lt;/th&gt;
      &lt;th&gt;ED&lt;/th&gt;
      &lt;th&gt;AU&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;9.78E+12&lt;/td&gt;
      &lt;td&gt;9.78E+12&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;Applied Multivariate Statistics for the Social Sciences&lt;/td&gt;
      &lt;td&gt;Analyses with SAS and Ibm’s SPSS&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;“Pituch, Keenan A. Stevens, James P.”&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The regex version works because the opening and closing tags are on the same
line and there are no nested tags - what if that was not the case?&lt;/p&gt;

&lt;p&gt;Well attempting to use regex on XML can only get you so far. It can work for 
certain situations but if you want to properly parse XML you can use an actual
XML parser.&lt;/p&gt;

&lt;h2 id=&quot;iterparse&quot;&gt;iterparse()&lt;/h2&gt;

&lt;p&gt;So we mentioned earlier the data was too large to load up into memory at once
and use an XML parser however both &lt;code class=&quot;highlighter-rouge&quot;&gt;xml.etree.ElementTree&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;lxml.etree&lt;/code&gt; 
support &lt;code class=&quot;highlighter-rouge&quot;&gt;iterparse()&lt;/code&gt; which allows us to parse XML without the need to load
the whole file directly into memory at once.&lt;/p&gt;

&lt;p&gt;You may see this referred to as a &lt;em&gt;Streaming XML Parser&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;iterparse()&lt;/code&gt; returns an iterator of &lt;code class=&quot;highlighter-rouge&quot;&gt;event, element&lt;/code&gt; pairs and the default behaviour
is to only return &lt;code class=&quot;highlighter-rouge&quot;&gt;end&lt;/code&gt; events i.e. the closing of an element &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;/element&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We’re going to use &lt;code class=&quot;highlighter-rouge&quot;&gt;lxml.etree&lt;/code&gt; here as &lt;em&gt;“efficiency”&lt;/em&gt; was mentioned
in the requirements due to the size of the data being processed. &lt;code class=&quot;highlighter-rouge&quot;&gt;lxml&lt;/code&gt; is
an interface to the &lt;code class=&quot;highlighter-rouge&quot;&gt;libxml2&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;libxslt&lt;/code&gt; C libraries.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;csv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;lxml.etree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;xmlfile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'input.xml'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;fieldnames&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'EA'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'I3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'TP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'TI'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'ST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'ED'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'AU'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;'TR'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'BC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'BI'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'CO'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'MP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'PD'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'PA'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;'NP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'RP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'RI'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'RE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'DI'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'EI'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'PU'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;'YP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'RS'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'SR'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'IU'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'DE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'RF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'WE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;'SG'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'IB'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'AV'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'PI'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'GC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'NC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'IL'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;'CP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'LA'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'RC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'SE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'PT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'PN'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'SI'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;csv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DictWriter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fieldnames&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fieldnames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writeheader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elem&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lxml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;etree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iterparse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xmlfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Record'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writerow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'EA'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'I3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%.2&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;E'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Just a couple of changes from our previous version.&lt;/p&gt;

&lt;p&gt;We no longer using &lt;code class=&quot;highlighter-rouge&quot;&gt;fileinput&lt;/code&gt; and passing the name of the 
input filename directly to &lt;code class=&quot;highlighter-rouge&quot;&gt;iterparse()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;How does it do?&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;ValueError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contains&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fields&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fieldnames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'AUS'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'BCS'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'EDS'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'RSS'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DictWriter()&lt;/code&gt; handles the cases of missing columns but if a row has extra
columns i.e. ones not contained in &lt;code class=&quot;highlighter-rouge&quot;&gt;fieldnames&lt;/code&gt; it will raise an error
when you try to write it.&lt;/p&gt;

&lt;p&gt;The difference is that our regex version ignored lines that only contained
an opening tag e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;AUS&amp;gt;&lt;/code&gt; so we did not have this problem.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;AUS&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;AU&amp;gt;&lt;/span&gt;Pituch, Keenan A.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/AU&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;AU&amp;gt;&lt;/span&gt;Stevens, James P.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/AU&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/AUS&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;BCS&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;BC&amp;gt;&lt;/span&gt;JHBC&lt;span class=&quot;nt&quot;&gt;&amp;lt;/BC&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/BCS&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Using &lt;code class=&quot;highlighter-rouge&quot;&gt;iterparse()&lt;/code&gt; we would need to 
add a check to skip any tag that is not a &lt;code class=&quot;highlighter-rouge&quot;&gt;Record&lt;/code&gt; or 
is not contained in &lt;code class=&quot;highlighter-rouge&quot;&gt;fieldnames&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;csv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;lxml.etree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;xmlfile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'input.xml'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;fieldnames&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'EA'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'I3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'TP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'TI'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'ST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'ED'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'AU'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;'TR'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'BC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'BI'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'CO'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'MP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'PD'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'PA'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;'NP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'RP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'RI'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'RE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'DI'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'EI'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'PU'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;'YP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'RS'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'SR'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'IU'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'DE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'RF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'WE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;'SG'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'IB'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'AV'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'PI'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'GC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'NC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'IL'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;'CP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'LA'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'RC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'SE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'PT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'PN'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'SI'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;csv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DictWriter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fieldnames&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fieldnames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writeheader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fieldnames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elem&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lxml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;etree&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iterparse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xmlfile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Record'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;writerow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; 
        &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'EA'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'I3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%.2&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;E'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We’ve created &lt;code class=&quot;highlighter-rouge&quot;&gt;tags = set(fieldnames)&lt;/code&gt; the reason being that testing
if something is in a &lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt; is cheaper / &lt;em&gt;“faster”&lt;/em&gt; than testing 
if something is in a &lt;code class=&quot;highlighter-rouge&quot;&gt;list&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;A &lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt; is similar to a list except that it cannot contain duplicated
items and it does not retain order. Having no specified order is why
we cannot just use a &lt;code class=&quot;highlighter-rouge&quot;&gt;set&lt;/code&gt;. Our columns have a specified order.&lt;/p&gt;

&lt;p&gt;So if it’s a &lt;code class=&quot;highlighter-rouge&quot;&gt;Record&lt;/code&gt; write the row else check if it’s a “valid”
tag, it not we &lt;code class=&quot;highlighter-rouge&quot;&gt;continue&lt;/code&gt; which jumps to the next iteration of the 
loop.&lt;/p&gt;

&lt;p&gt;Otherwise we have a valid tag and we add or merge as needed just as
we did in the first version.&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;summary&lt;/h2&gt;

&lt;p&gt;If you need to parse &lt;em&gt;“huge”&lt;/em&gt; XML files that cannot fit into
memory one option is to use &lt;code class=&quot;highlighter-rouge&quot;&gt;iterparse()&lt;/code&gt; from &lt;code class=&quot;highlighter-rouge&quot;&gt;xml.etree.ElementTree&lt;/code&gt; 
or &lt;code class=&quot;highlighter-rouge&quot;&gt;lxml.etree&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The final version of the code and the full &lt;code class=&quot;highlighter-rouge&quot;&gt;input.xml&lt;/code&gt; file are 
available &lt;a href=&quot;https://github.com/kaijento/code/tree/master/xmlparsing/2017/04/18&quot;&gt;on github&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 18 Apr 2017 07:15:11 +0100</pubDate>
        <link>http://kaijento.github.io/2017/04/18/parsing-xml-with-python/</link>
        <guid isPermaLink="true">http://kaijento.github.io/2017/04/18/parsing-xml-with-python/</guid>
        
        <category>python</category>
        
        <category>xml</category>
        
        <category>regex</category>
        
        <category>csv</category>
        
        <category>lxml</category>
        
        <category>dictwriter</category>
        
        <category>xmltocsv</category>
        
        
      </item>
    
      <item>
        <title>bash: rename files based on modification time</title>
        <description>&lt;p&gt;&lt;em&gt;I have a directory full of files. I would like to prefix
each filename with an ascending count starting from the oldest.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;before&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ls -l
total 0K
-rw------- 1 user group 0 Apr 12 05:44 a
-rw------- 1 user group 0 Apr 12 04:45 b
-rw------- 1 user group 0 Apr 12 03:45 c
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;after&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ls -lQ
total 0K
-rw------- 1 user group 0 Apr 12 03:45 &lt;span class=&quot;s2&quot;&gt;&quot;01 c&quot;&lt;/span&gt;
-rw------- 1 user group 0 Apr 12 04:45 &lt;span class=&quot;s2&quot;&gt;&quot;02 b&quot;&lt;/span&gt;
-rw------- 1 user group 0 Apr 12 05:44 &lt;span class=&quot;s2&quot;&gt;&quot;03 a&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Generally when talking about the age of files on &lt;em&gt;“*nix”&lt;/em&gt;
the last modification time or &lt;code class=&quot;highlighter-rouge&quot;&gt;mtime&lt;/code&gt; is used as the presence of 
“creation time” is filesystem specific and may not exist.&lt;/p&gt;

&lt;p&gt;We’re using Linux here which means we have access to
GNU &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; which has &lt;code class=&quot;highlighter-rouge&quot;&gt;-Q&lt;/code&gt; to quote the filename. This 
can be useful for highlighting the filename portion of 
the ouput when using &lt;code class=&quot;highlighter-rouge&quot;&gt;-l&lt;/code&gt; as shown above.&lt;/p&gt;

&lt;p&gt;So let’s create some test files.&lt;/p&gt;

&lt;p&gt;GNU &lt;code class=&quot;highlighter-rouge&quot;&gt;date&lt;/code&gt; has &lt;code class=&quot;highlighter-rouge&quot;&gt;-d&lt;/code&gt; which can simplify creating dates 
in the past (or future).&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;touch -t &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;date +%m%d%H%M -d &lt;span class=&quot;s1&quot;&gt;'1 hour ago'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; c
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;touch -t &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;date +%m%d%H%M -d &lt;span class=&quot;s1&quot;&gt;'2 hour ago'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; b
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;touch a
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ls -l
total 0K
-rw------- 1 user group 0 Apr 12 07:31 a
-rw------- 1 user group 0 Apr 12 05:31 b
-rw------- 1 user group 0 Apr 12 06:31 c
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;$()&lt;/code&gt; here is called &lt;em&gt;Command Substitution&lt;/em&gt;.
It is used for capturing the output of a command. You may 
also see it written using backticks (&lt;em&gt;“backquotes”&lt;/em&gt;) 
e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;`date +%m%d%H%M -d '1 hour ago'`&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The backtick form is considered &lt;em&gt;old-style&lt;/em&gt; and there
are some slight differences with regards to backslash handling.&lt;/p&gt;

&lt;p&gt;You will of course read on &lt;em&gt;“the internet”&lt;/em&gt; that you are
&lt;em&gt;“never”&lt;/em&gt; to use the old-style but some people find it 
&lt;em&gt;“prettier”&lt;/em&gt; and easier to type.&lt;/p&gt;

&lt;h2 id=&quot;ls&quot;&gt;ls&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; has the &lt;code class=&quot;highlighter-rouge&quot;&gt;-t&lt;/code&gt; option which will sort by modification time.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ls -lt 
total 0K
-rw------- 1 user group 0 Apr 12 07:31 a
-rw------- 1 user group 0 Apr 12 06:31 c
-rw------- 1 user group 0 Apr 12 05:31 b
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;With &lt;code class=&quot;highlighter-rouge&quot;&gt;-r&lt;/code&gt; you can reverse the sort order.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ls -ltr 
total 0K
-rw------- 1 user group 0 Apr 12 05:31 b
-rw------- 1 user group 0 Apr 12 06:31 c
-rw------- 1 user group 0 Apr 12 07:31 a
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;According to &lt;em&gt;“the internet”&lt;/em&gt; you’re &lt;em&gt;“never”&lt;/em&gt;
supposed to parse &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; but &lt;em&gt;“h8rz gonna h8”&lt;/em&gt; as they say.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;f &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;ls -tr&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;let &lt;/span&gt;i++; mv -v &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
‘b’ -&amp;gt; ‘1 b’
‘c’ -&amp;gt; ‘2 c’
‘a’ -&amp;gt; ‘3 a’
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Check the results:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ls -lQ
total 0K
-rw------- 1 user group 0 Apr 12 05:31 &lt;span class=&quot;s2&quot;&gt;&quot;1 b&quot;&lt;/span&gt;
-rw------- 1 user group 0 Apr 12 06:31 &lt;span class=&quot;s2&quot;&gt;&quot;2 c&quot;&lt;/span&gt;
-rw------- 1 user group 0 Apr 12 07:31 &lt;span class=&quot;s2&quot;&gt;&quot;3 a&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;double-dash&quot;&gt;double dash&lt;/h2&gt;

&lt;p&gt;Instead of the filename &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt; we will use &lt;code class=&quot;highlighter-rouge&quot;&gt;-b&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;touch -b
touch: invalid option -- &lt;span class=&quot;s1&quot;&gt;'b'&lt;/span&gt;
Try &lt;span class=&quot;s1&quot;&gt;'touch --help'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;more information.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The problem is that &lt;code class=&quot;highlighter-rouge&quot;&gt;-b&lt;/code&gt; is being parsed by &lt;code class=&quot;highlighter-rouge&quot;&gt;touch&lt;/code&gt; as an argument
due to the leading &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;There are 2 options, we can can give the full path e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;./-b&lt;/code&gt; or we can use &lt;code class=&quot;highlighter-rouge&quot;&gt;-- -b&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A  &lt;code class=&quot;highlighter-rouge&quot;&gt;--&lt;/code&gt; signals the end of options and disables further option processing.&lt;br /&gt;
Any arguments after the &lt;code class=&quot;highlighter-rouge&quot;&gt;--&lt;/code&gt; are treated as filenames and arguments.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ls -lt 
total 0K
-rw------- 1 user group 0 Apr 12 07:31 a
-rw------- 1 user group 0 Apr 12 06:31 c
-rw------- 1 user group 0 Apr 12 05:31 -b
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Does our loop still work?&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;f &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;ls -tr&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;let &lt;/span&gt;i++; mv -v &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
‘c’ -&amp;gt; ‘1 c’
‘a’ -&amp;gt; ‘2 a’
mv: missing destination file operand after ‘3 -b’
Try &lt;span class=&quot;s1&quot;&gt;'mv --help'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;more information.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So as with the &lt;code class=&quot;highlighter-rouge&quot;&gt;touch&lt;/code&gt; example above &lt;code class=&quot;highlighter-rouge&quot;&gt;mv&lt;/code&gt; is interpreting &lt;code class=&quot;highlighter-rouge&quot;&gt;-b&lt;/code&gt; as an option
thus breaking the command.&lt;/p&gt;

&lt;p&gt;We could use add &lt;code class=&quot;highlighter-rouge&quot;&gt;./&lt;/code&gt; in but we will choose the &lt;code class=&quot;highlighter-rouge&quot;&gt;--&lt;/code&gt; option instead.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;f &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;ls -tr&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;let &lt;/span&gt;i++; mv -v -- &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
‘-b’ -&amp;gt; ‘1 -b’
‘c’ -&amp;gt; ‘2 c’
‘a’ -&amp;gt; ‘3 a’
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We’re explicitly setting &lt;code class=&quot;highlighter-rouge&quot;&gt;i=0&lt;/code&gt; here because the previous example was executed
in the same bash instance so &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; had a value of &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;. We will set &lt;code class=&quot;highlighter-rouge&quot;&gt;i=0&lt;/code&gt; for
the remaining examples.&lt;/p&gt;

&lt;h2 id=&quot;math-in-bash&quot;&gt;math in bash&lt;/h2&gt;

&lt;p&gt;There are various ways to perform arithmetic in bash. 
Instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;let i++&lt;/code&gt; we could have used &lt;code class=&quot;highlighter-rouge&quot;&gt;((i++))&lt;/code&gt;. There is also
the &lt;code class=&quot;highlighter-rouge&quot;&gt;$(())&lt;/code&gt; form which will return the result meaning we could
inline the incrementation into the &lt;code class=&quot;highlighter-rouge&quot;&gt;dest&lt;/code&gt; filename e.g. 
&lt;code class=&quot;highlighter-rouge&quot;&gt;mv -v -- &quot;$f&quot; &quot;$((++i)) $f&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;With inlining we need to change the increment from postfix to prefix 
otherwise we would start at &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;0 b&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;1 c&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;2 a&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We did not explicitly initialize &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; in the first example as it wasn’t needed.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;declare&lt;/span&gt; -p i
-bash: &lt;span class=&quot;nb&quot;&gt;declare&lt;/span&gt;: i: not found
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;i++&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;declare&lt;/span&gt; -p i
&lt;span class=&quot;nb&quot;&gt;declare&lt;/span&gt; -- &lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;printf-padding&quot;&gt;printf padding&lt;/h2&gt;

&lt;p&gt;The requirements stated that numbers 1-9 should be padded with a leading 0. We can use &lt;code class=&quot;highlighter-rouge&quot;&gt;printf&lt;/code&gt;
to achieve that.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0; &lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'%02d\n'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;i&lt;span class=&quot;k&quot;&gt;))&lt;/span&gt;
01
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;bash’s &lt;code class=&quot;highlighter-rouge&quot;&gt;printf&lt;/code&gt; was given &lt;code class=&quot;highlighter-rouge&quot;&gt;-v&lt;/code&gt; which allows you to store the output into a 
variable instead of printing it out.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0; &lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; -v new %02d &lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;i&lt;span class=&quot;k&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;declare&lt;/span&gt; -p new
&lt;span class=&quot;nb&quot;&gt;declare&lt;/span&gt; -- &lt;span class=&quot;nv&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;01&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You could of course use &lt;em&gt;Command Substitution&lt;/em&gt; if your version did not
support &lt;code class=&quot;highlighter-rouge&quot;&gt;-v&lt;/code&gt;. Let’s try again with &lt;code class=&quot;highlighter-rouge&quot;&gt;printf&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;old &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;ls -tr&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;do 
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; -v new &lt;span class=&quot;s1&quot;&gt;'%02d %s'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;i&lt;span class=&quot;k&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$old&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;; mv -v -- &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$old&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$new&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
‘-b’ -&amp;gt; ‘01 -b’
‘c’  -&amp;gt; ‘02 c’
‘a’  -&amp;gt; ‘03 a’
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;to-parse-or-not-to-parse&quot;&gt;to parse or not to parse&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;But OMG it sez on d internet nevar parse &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; !!! lmao wut r u doin u t0t4l n00bz0r3!!!!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The problem with parsing &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; this way is that it cannot handle 
all possible filenames, one example being filenames that contain spaces.&lt;/p&gt;

&lt;p&gt;Enter the spaces.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ls -lQ
total 0K
-rw------- 1 user group 0 Apr 12 07:31 &lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;
-rw------- 1 user group 0 Apr 12 05:31 &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;
-rw------- 1 user group 0 Apr 12 06:31 &lt;span class=&quot;s2&quot;&gt;&quot;c d&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Enter the errors.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;old &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;ls -tr&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;do 
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; -v new &lt;span class=&quot;s1&quot;&gt;'%02d %s'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;i&lt;span class=&quot;k&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$old&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;; mv -v -- &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$old&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$new&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
‘b’ -&amp;gt; ‘01 b’
mv: cannot stat ‘c’: No such file or directory
mv: cannot stat ‘d’: No such file or directory
‘a’ -&amp;gt; ‘04 a’
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The problem here is that &lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt; iterates over “words”&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;help &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for
  for&lt;/span&gt;: &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;NAME &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;WORDS ... &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; ; &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;COMMANDS; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And because we have a filename that contains a space we end up with &lt;code class=&quot;highlighter-rouge&quot;&gt;4&lt;/code&gt;
“words” for the &lt;code class=&quot;highlighter-rouge&quot;&gt;3&lt;/code&gt; filenames.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ls -tr
b  c d  a
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To fix this we could change the &lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt; loop to a &lt;code class=&quot;highlighter-rouge&quot;&gt;while&lt;/code&gt; loop and treat 
each filename as a “line” instead of a “word”&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0; ls -tr | &lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; -r old; &lt;span class=&quot;k&quot;&gt;do 
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; -v new &lt;span class=&quot;s1&quot;&gt;'%02d %s'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;i&lt;span class=&quot;k&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$old&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;; mv -v -- &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$old&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$new&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
‘b’   -&amp;gt; ‘01 b’
‘c d’ -&amp;gt; ‘02 c d’
‘a’   -&amp;gt; ‘03 a’
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This approach will break though if any filename contains a newline character.
Yes, filenames can contain newlines. No, I’ve never had a filename with a
newline in it.&lt;/p&gt;

&lt;p&gt;We can create such a filename using &lt;code class=&quot;highlighter-rouge&quot;&gt;touch $'e\nf'&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ls -lQ
total 0K
-rw------- 1 user group 0 Apr 12 07:31 &lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;
-rw------- 1 user group 0 Apr 12 05:31 &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;
-rw------- 1 user group 0 Apr 12 06:31 &lt;span class=&quot;s2&quot;&gt;&quot;c d&quot;&lt;/span&gt;
-rw------- 1 user group 0 Apr 12 21:46 &lt;span class=&quot;s2&quot;&gt;&quot;e&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;f&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;From the &lt;a href=&quot;https://www.gnu.org/software/bash/manual/bashref.html#ANSI_002dC-Quoting&quot;&gt;manual&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Words of the form &lt;code class=&quot;highlighter-rouge&quot;&gt;$'string'&lt;/code&gt; are treated specially.&lt;br /&gt;
The word expands to string, with backslash-escaped characters 
replaced as specified¬ by the ANSI C standard.
The expanded result is single-quoted, as if the dollar sign had not been present.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Similar to the extra “word” problem with &lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt; we now have an 
extra “line” with &lt;code class=&quot;highlighter-rouge&quot;&gt;while&lt;/code&gt; as &lt;code class=&quot;highlighter-rouge&quot;&gt;e&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;f&lt;/code&gt; are treated as separate
filenames.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0; ls -tr | &lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; -r old; &lt;span class=&quot;k&quot;&gt;do 
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; -v new &lt;span class=&quot;s1&quot;&gt;'%02d %s'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;i&lt;span class=&quot;k&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$old&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;; mv -v -- &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$old&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$new&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
‘b’   -&amp;gt; ‘01 b’
‘c d’ -&amp;gt; ‘02 c d’
‘a’   -&amp;gt; ‘03 a’
mv: cannot stat ‘e’: No such file or directory
mv: cannot stat ‘f’: No such file or directory
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;One possible solution to this problem is to use the 
&lt;em&gt;null-byte&lt;/em&gt; to delimit entries as opposed to 
spaces or newlines and that means ditching the use of &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;find&quot;&gt;find&lt;/h2&gt;

&lt;p&gt;GNU &lt;code class=&quot;highlighter-rouge&quot;&gt;find&lt;/code&gt; has &lt;code class=&quot;highlighter-rouge&quot;&gt;-printf&lt;/code&gt; which takes a format string to print out
all kinds of stats (similar to the &lt;code class=&quot;highlighter-rouge&quot;&gt;stat(1)&lt;/code&gt; command) such as
&lt;code class=&quot;highlighter-rouge&quot;&gt;%t&lt;/code&gt; for the last modification time. GNU &lt;code class=&quot;highlighter-rouge&quot;&gt;sort&lt;/code&gt; has &lt;code class=&quot;highlighter-rouge&quot;&gt;-z&lt;/code&gt; which 
allows it to process null-delimited records.&lt;/p&gt;

&lt;p&gt;This allows us to build a list of null-delimited filenames and sort 
them according to their last modification time which we can then 
process with a &lt;code class=&quot;highlighter-rouge&quot;&gt;while read&lt;/code&gt; loop.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0; find -mindepth 1 -printf &lt;span class=&quot;s1&quot;&gt;'%T@ %p\0'&lt;/span&gt; | sort -z -k1,1n | 
&lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; -r -d &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt; _ old
&lt;span class=&quot;k&quot;&gt;do 
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;dirname&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;old&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%/*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/
    &lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; -v new &lt;span class=&quot;s1&quot;&gt;'%s%02d %s'&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dirname&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;i&lt;span class=&quot;k&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;old&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;##*/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    mv -v -- &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$old&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$new&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
‘./b’    -&amp;gt; ‘./01 b’
‘./c d’  -&amp;gt; ‘./02 c d’
‘./a’    -&amp;gt; ‘./03 a’
‘./e&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;f’ -&amp;gt; ‘./04 e&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;f’
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You may notice that we have &lt;code class=&quot;highlighter-rouge&quot;&gt;./&lt;/code&gt; in the output here. That is because we get the 
full path back from &lt;code class=&quot;highlighter-rouge&quot;&gt;find&lt;/code&gt; so technically we could omit the &lt;code class=&quot;highlighter-rouge&quot;&gt;--&lt;/code&gt; and it would
work as expected with filenames with leading dashes.&lt;/p&gt;

&lt;p&gt;The result:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ls -lQ
total 0K
-rw------- 1 user group 0 Apr 12 05:31 &lt;span class=&quot;s2&quot;&gt;&quot;01 b&quot;&lt;/span&gt;
-rw------- 1 user group 0 Apr 12 06:31 &lt;span class=&quot;s2&quot;&gt;&quot;02 c d&quot;&lt;/span&gt;
-rw------- 1 user group 0 Apr 12 07:31 &lt;span class=&quot;s2&quot;&gt;&quot;03 a&quot;&lt;/span&gt;
-rw------- 1 user group 0 Apr 12 21:46 &lt;span class=&quot;s2&quot;&gt;&quot;04 e&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;f&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;-mindepth 1&lt;/code&gt; prevents the directory from appearing
in the results.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;find
.
./b
./c d
./a
./e?f
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;find -mindepth 1
./b
./c d
./a
./e?f
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As mentioned &lt;code class=&quot;highlighter-rouge&quot;&gt;%t&lt;/code&gt; prints the last modification time. Using
&lt;code class=&quot;highlighter-rouge&quot;&gt;%T&lt;/code&gt; also prints it but allows you to customize the format. 
&lt;code class=&quot;highlighter-rouge&quot;&gt;@&lt;/code&gt; is used to set the format to &lt;em&gt;epoch time&lt;/em&gt; i.e.
to print it out as seconds since the epoch.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;find -mindepth 1 -printf &lt;span class=&quot;s1&quot;&gt;'%t\n'&lt;/span&gt;
Wed Apr 12 05:31:00.0000000000 2017
Wed Apr 12 06:31:00.0000000000 2017
Wed Apr 12 07:31:17.0508221217 2017
Wed Apr 12 21:46:53.0661150219 2017
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;find -mindepth 1 -printf &lt;span class=&quot;s1&quot;&gt;'%T@\n'&lt;/span&gt;
1491971460.0000000000
1491975060.0000000000
1491978677.5082212170
1492030013.6611502190
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;%p&lt;/code&gt; is the path of the item found and we used &lt;code class=&quot;highlighter-rouge&quot;&gt;\0&lt;/code&gt; to delimit
the record with the null-byte.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;find -mindepth 1 -printf &lt;span class=&quot;s1&quot;&gt;'%T@\0'&lt;/span&gt; | cat -vet
1491971460.0000000000^@1491975060.0000000000^@1491978677.5082212170^@1492030013.6611502190^@&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;^@&lt;/code&gt; here is a visual representation of the null-byte.&lt;/p&gt;

&lt;p&gt;A full list of the &lt;code class=&quot;highlighter-rouge&quot;&gt;-printf&lt;/code&gt; format directives can be found 
&lt;a href=&quot;https://www.gnu.org/software/findutils/manual/html_node/find_html/Format-Directives.html#Format-Directives&quot;&gt;in the manual&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The requirements we were given stated that we had a flat directory that
only contained files and they were all to be renamed. A solution using
&lt;code class=&quot;highlighter-rouge&quot;&gt;find&lt;/code&gt; would allow for recurision and one could also utilize the filtering
capabilities of &lt;code class=&quot;highlighter-rouge&quot;&gt;find&lt;/code&gt; if needed e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;-name&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;-type&lt;/code&gt;, etc.&lt;/p&gt;

&lt;p&gt;The results of the &lt;code class=&quot;highlighter-rouge&quot;&gt;find&lt;/code&gt; command are piped to &lt;code class=&quot;highlighter-rouge&quot;&gt;sort -z -k1,1n&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-z&lt;/code&gt; tells &lt;code class=&quot;highlighter-rouge&quot;&gt;sort&lt;/code&gt; to expect null-delimited records as opposed to newline. 
&lt;code class=&quot;highlighter-rouge&quot;&gt;-k1,1n&lt;/code&gt; is to sort on the first “field” where &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt; means to sort
numerically.&lt;/p&gt;

&lt;p&gt;The sorted results are then fed to &lt;code class=&quot;highlighter-rouge&quot;&gt;while read -r -d '' _ old&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-r&lt;/code&gt; has to do with backslash handing, you pretty much always 
want to use &lt;code class=&quot;highlighter-rouge&quot;&gt;-r&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;read&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-d ''&lt;/code&gt; sets the delimiter to null rather than a newline.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt; is just a placeholder variable name, we could have instead 
used &lt;code class=&quot;highlighter-rouge&quot;&gt;read -r -d '' time old&lt;/code&gt;. Using &lt;code class=&quot;highlighter-rouge&quot;&gt;_&lt;/code&gt; is a naming convention
if you have to set a variable but don’t need to use it.&lt;/p&gt;

&lt;p&gt;Because &lt;code class=&quot;highlighter-rouge&quot;&gt;%p&lt;/code&gt; from the &lt;code class=&quot;highlighter-rouge&quot;&gt;-printf&lt;/code&gt; gives the full path to the file 
we need to break it up into the &lt;code class=&quot;highlighter-rouge&quot;&gt;directory&lt;/code&gt; component and &lt;code class=&quot;highlighter-rouge&quot;&gt;filename&lt;/code&gt;
component as to only add the prefix to the filename.&lt;/p&gt;

&lt;p&gt;That is what we’re doing with &lt;code class=&quot;highlighter-rouge&quot;&gt;dirname=${old%/*}/&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;${old##*/}&lt;/code&gt;
which is called &lt;em&gt;Parameter Expansion&lt;/em&gt; and they’re essentially
doing the same as the &lt;code class=&quot;highlighter-rouge&quot;&gt;dirname&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;basename&lt;/code&gt; commands.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;old&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/foo/bar/baz/file.ext
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;old&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%/*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
/foo/bar/baz
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;old&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;##*/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
file.ext
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you didn’t have access to GNU &lt;code class=&quot;highlighter-rouge&quot;&gt;find&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;sort&lt;/code&gt; you would probably
have to reach for &lt;code class=&quot;highlighter-rouge&quot;&gt;perl&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;python&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;ruby&lt;/code&gt; or whichever language
you like to use.&lt;/p&gt;

&lt;h2 id=&quot;perl&quot;&gt;perl&lt;/h2&gt;

&lt;p&gt;With &lt;code class=&quot;highlighter-rouge&quot;&gt;perl&lt;/code&gt; you could use something like:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;perl -e &lt;span class=&quot;s1&quot;&gt;'system &quot;echo&quot;, &quot;mv&quot;, &quot;-v&quot;, &quot;--&quot;, $_, sprintf &quot;%02d %s&quot;, ++$i, $_ 
    for sort { (stat $a)[9] &amp;lt;=&amp;gt; (stat $b)[9] } &amp;lt;*&amp;gt;'&lt;/span&gt;
mv -v -- b 01 b
mv -v -- c d 02 c d
mv -v -- a 03 a
mv -v -- e
f 04 e
f
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We use &lt;code class=&quot;highlighter-rouge&quot;&gt;sprintf&lt;/code&gt; to do the zero-padding and gives us back a string.
&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;*&amp;gt;&lt;/code&gt; here is doing the same as &lt;code class=&quot;highlighter-rouge&quot;&gt;glob &quot;*&quot;&lt;/code&gt; which as the name 
suggests mimics the behaviour of the shell glob &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;These filenames are passed to the &lt;code class=&quot;highlighter-rouge&quot;&gt;sort&lt;/code&gt; block which sorts 
based on the 10th element of the &lt;code class=&quot;highlighter-rouge&quot;&gt;stat&lt;/code&gt; function which is 
the last modification time.&lt;/p&gt;

&lt;p&gt;Written out in “full-form” it could look like:&lt;/p&gt;

&lt;div class=&quot;language-perl highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;@files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;glob&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;*&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;@files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;echo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;mv&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-v&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;--&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;$_&lt;/code&gt; in our one-liner is called the &lt;em&gt;Default Variable&lt;/em&gt;.
If you don’t supply a variable name to the &lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt; loop &lt;code class=&quot;highlighter-rouge&quot;&gt;$_&lt;/code&gt; will
be used. So &lt;code class=&quot;highlighter-rouge&quot;&gt;$_&lt;/code&gt; will contain the filename on each iteration of
the loop.&lt;/p&gt;

&lt;p&gt;We’re only executing &lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt; to see how the generated command will
look. It looks okay so we can remove it to run &lt;code class=&quot;highlighter-rouge&quot;&gt;mv&lt;/code&gt; instead.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;perl -e &lt;span class=&quot;s1&quot;&gt;'system &quot;mv&quot;, &quot;-v&quot;, &quot;--&quot;, $_, sprintf &quot;%02d %s&quot;, ++$i, $_ 
    for sort { (stat $a)[9] &amp;lt;=&amp;gt; (stat $b)[9] } &amp;lt;*&amp;gt;'&lt;/span&gt;
‘b’    -&amp;gt; ‘01 b’
‘c d’  -&amp;gt; ‘02 c d’
‘a’    -&amp;gt; ‘03 a’
‘e&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;f’ -&amp;gt; ‘04 e&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;f’
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ls -lQ
total 0K
-rw------- 1 user group 0 Apr 12 05:31 &lt;span class=&quot;s2&quot;&gt;&quot;01 b&quot;&lt;/span&gt;
-rw------- 1 user group 0 Apr 12 06:31 &lt;span class=&quot;s2&quot;&gt;&quot;02 c d&quot;&lt;/span&gt;
-rw------- 1 user group 0 Apr 12 07:31 &lt;span class=&quot;s2&quot;&gt;&quot;03 a&quot;&lt;/span&gt;
-rw------- 1 user group 0 Apr 12 21:46 &lt;span class=&quot;s2&quot;&gt;&quot;04 e&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;f&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You could use Perl’s &lt;code class=&quot;highlighter-rouge&quot;&gt;grep&lt;/code&gt; if you needed to filter the filenames
generated from the &lt;code class=&quot;highlighter-rouge&quot;&gt;glob&lt;/code&gt; e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;grep { -f } &amp;lt;*&amp;gt;&lt;/code&gt; to match only 
&lt;em&gt;“plain files”&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;You could also use the &lt;code class=&quot;highlighter-rouge&quot;&gt;File::Find&lt;/code&gt; module to implement a 
recursive solution if needed.&lt;/p&gt;

&lt;h2 id=&quot;python&quot;&gt;python&lt;/h2&gt;

&lt;p&gt;It’s also possible to produce a Python &lt;em&gt;“one-liner”&lt;/em&gt; to
do rougly the same thing.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;python -c &lt;span class=&quot;s1&quot;&gt;'import os, subprocess; [
    subprocess.call((&quot;echo&quot;, &quot;mv&quot;, &quot;-v&quot;, &quot;--&quot;, f, &quot;%02d %s&quot; % (i, f))) 
      for i, f in enumerate(sorted(os.listdir(&quot;.&quot;), key=os.path.getmtime), start=1)]'&lt;/span&gt;
mv -v -- b 01 b
mv -v -- c d 02 c d
mv -v -- a 03 a
mv -v -- e
f 04 e
f
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You can of course just write it “normally” which could look something like:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;subprocess&lt;/span&gt;
    
&lt;span class=&quot;n&quot;&gt;filenames&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getmtime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filenames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;subprocess&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sorted()&lt;/code&gt; can take a &lt;em&gt;“callback”&lt;/em&gt; (the name of a function to call or
an &lt;em&gt;“inlined”&lt;/em&gt; function created with &lt;code class=&quot;highlighter-rouge&quot;&gt;lambda&lt;/code&gt;) via the &lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt; argument.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;enumerate()&lt;/code&gt; takes an iterable and gives us the &lt;code class=&quot;highlighter-rouge&quot;&gt;index&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;item&lt;/code&gt; per iteration.
It defaults to &lt;code class=&quot;highlighter-rouge&quot;&gt;start&lt;/code&gt; at &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; so we change that to &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'one'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'two'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'three'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'one'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'two'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'three'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'one'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'two'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'three'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'one'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'two'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'three'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As we’re importing the &lt;code class=&quot;highlighter-rouge&quot;&gt;os&lt;/code&gt; module we can replace our &lt;code class=&quot;highlighter-rouge&quot;&gt;subprocess.call()&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;mv&lt;/code&gt;
with &lt;code class=&quot;highlighter-rouge&quot;&gt;os.rename()&lt;/code&gt;. We lose the verbose output from &lt;code class=&quot;highlighter-rouge&quot;&gt;mv -v&lt;/code&gt; though.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;python -c &lt;span class=&quot;s1&quot;&gt;'import os; [ os.rename(f, &quot;%02d %s&quot; % (i, f))
    for i, f in enumerate(sorted(os.listdir(&quot;.&quot;), key=os.path.getmtime), start=1)]'&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ls -lQ
total 0K
-rw------- 1 user group 0 Apr 12 05:31 &lt;span class=&quot;s2&quot;&gt;&quot;01 b&quot;&lt;/span&gt;
-rw------- 1 user group 0 Apr 12 06:31 &lt;span class=&quot;s2&quot;&gt;&quot;02 c d&quot;&lt;/span&gt;
-rw------- 1 user group 0 Apr 12 07:31 &lt;span class=&quot;s2&quot;&gt;&quot;03 a&quot;&lt;/span&gt;
-rw------- 1 user group 0 Apr 12 21:46 &lt;span class=&quot;s2&quot;&gt;&quot;04 e&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;f&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You could utilize &lt;code class=&quot;highlighter-rouge&quot;&gt;os.walk()&lt;/code&gt; if you needed a recursive solution.&lt;/p&gt;

&lt;h2 id=&quot;summary&quot;&gt;summary&lt;/h2&gt;

&lt;p&gt;Yes, you can to parse &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt;. Yes, there are edge cases where it can fail.&lt;br /&gt;
If these edge cases do not apply to you however, it can be the “simplest”
approach.&lt;/p&gt;

&lt;p&gt;Be aware of the edge cases and choose the appropriate approach for your 
specific needs.&lt;/p&gt;
</description>
        <pubDate>Wed, 12 Apr 2017 07:17:57 +0100</pubDate>
        <link>http://kaijento.github.io/2017/04/12/bash-rename-modification-time/</link>
        <guid isPermaLink="true">http://kaijento.github.io/2017/04/12/bash-rename-modification-time/</guid>
        
        <category>bash</category>
        
        <category>find</category>
        
        <category>rename</category>
        
        <category>perl</category>
        
        <category>python</category>
        
        <category>linux</category>
        
        
      </item>
    
      <item>
        <title>Web scraping: reddit.com</title>
        <description>&lt;p&gt;&lt;em&gt;How do I scrape the front page of a subreddit using Python?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Scraping a subreddit&lt;/em&gt; seems to be a commonly requested task
 and people usually attempt to do it using &lt;code class=&quot;highlighter-rouge&quot;&gt;urllib&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;requests&lt;/code&gt; 
combined with &lt;code class=&quot;highlighter-rouge&quot;&gt;lxml&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;BeautifulSoup&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Reddit does have an &lt;a href=&quot;https://www.reddit.com/dev/api&quot;&gt;official API&lt;/a&gt; and 
there is a Python interface to it in &lt;a href=&quot;https://praw.readthedocs.io/&quot;&gt;PRAW&lt;/a&gt;. 
You do however, need to register an account and use OAuth with this 
approach.&lt;/p&gt;

&lt;p&gt;There is also another option. Reddit allows you to add a &lt;code class=&quot;highlighter-rouge&quot;&gt;.json&lt;/code&gt; 
extension to the end of your request and will give you back 
the data in JSON format which can then be processed using a
JSON parser such as the &lt;code class=&quot;highlighter-rouge&quot;&gt;json&lt;/code&gt; module.&lt;/p&gt;

&lt;p&gt;It is sort of like they provide unauthorized access to their JSON API
with this method.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'http://reddit.com/r/learnpython/new/.json'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'user-agent'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Mozilla/5.0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'children'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Reddit blocks certain user-agent strings so we must spoof it.&lt;/p&gt;

&lt;h2 id=&quot;rjson&quot;&gt;r.json()&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;r.json()&lt;/code&gt; just does a &lt;code class=&quot;highlighter-rouge&quot;&gt;json.loads()&lt;/code&gt; in the background which turns
a JSON string into a Python structure. We get back a nested structure 
of dicts and lists.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'dict'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'dict'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;u'modhash'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u'children'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u'after'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;u'before'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To view a pretty-printed version of the structure we can use &lt;code class=&quot;highlighter-rouge&quot;&gt;json.dumps()&lt;/code&gt;
e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;print(json.dumps(r.json(), indent=4, sort_keys=True))&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You will get a lot of output running it directly on &lt;code class=&quot;highlighter-rouge&quot;&gt;r.json()&lt;/code&gt; so it may 
make sense to write it out to a file (&lt;code class=&quot;highlighter-rouge&quot;&gt;json.dump()&lt;/code&gt;) instead.&lt;/p&gt;

&lt;p&gt;After looking at the structure we can see that the posts are available inside
the &lt;code class=&quot;highlighter-rouge&quot;&gt;['data']['children']&lt;/code&gt; list. &lt;code class=&quot;highlighter-rouge&quot;&gt;['data']&lt;/code&gt; also holds some other information.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'after'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u't3_64o6gh'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;These &lt;code class=&quot;highlighter-rouge&quot;&gt;before&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;after&lt;/code&gt; values are used for result page navigation
when you click on the &lt;code class=&quot;highlighter-rouge&quot;&gt;next&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;prev&lt;/code&gt; buttons. To get to the next
page we can pass &lt;code class=&quot;highlighter-rouge&quot;&gt;after=t3_64o6gh&lt;/code&gt; as a GET param.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next_page_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'?&amp;amp;after='&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'after'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next_page&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;page2_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'user-agent'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Mozilla/5.0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;next_page&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'children'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'url'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://www.reddit.com/r/learnpython/comments/64o5yx/help_breakdown_list_comprehension_example/'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;When making multiple requests however, you will usually want to use a 
&lt;a href=&quot;http://docs.python-requests.org/en/latest/user/advanced/#session-objects&quot;&gt;session object&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So each post is a dict and the important information is available inside the &lt;code class=&quot;highlighter-rouge&quot;&gt;data&lt;/code&gt; key:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;posts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'children'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dumps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sort_keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;approved_by&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
        &lt;span class=&quot;s&quot;&gt;&quot;archived&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
        &lt;span class=&quot;s&quot;&gt;&quot;author&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;HolyCoder&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
        &lt;span class=&quot;s&quot;&gt;&quot;author_flair_css_class&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
        &lt;span class=&quot;s&quot;&gt;&quot;author_flair_text&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
        &lt;span class=&quot;s&quot;&gt;&quot;banned_by&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
        &lt;span class=&quot;s&quot;&gt;&quot;brand_safe&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
        &lt;span class=&quot;s&quot;&gt;&quot;clicked&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
        &lt;span class=&quot;s&quot;&gt;&quot;contest_mode&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
        &lt;span class=&quot;s&quot;&gt;&quot;created&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1491943248.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
        &lt;span class=&quot;s&quot;&gt;&quot;created_utc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1491914448.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
        &lt;span class=&quot;s&quot;&gt;&quot;distinguished&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
        &lt;span class=&quot;s&quot;&gt;&quot;domain&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;self.learnpython&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I’ve truncated the output here but the ones people are usually after are &lt;code class=&quot;highlighter-rouge&quot;&gt;author&lt;/code&gt;,
&lt;code class=&quot;highlighter-rouge&quot;&gt;selftext&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'url'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://www.reddit.com/r/learnpython/comments/64qkav/efficiency_of_an_algorithm/'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'title'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'Efficiency of an algorithm'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;It’s pretty annoying having to use &lt;code class=&quot;highlighter-rouge&quot;&gt;['data']&lt;/code&gt; all the time so we could have 
instead done:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;posts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'children'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;posts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'url'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://www.reddit.com/r/learnpython/comments/64qkav/efficiency_of_an_algorithm/'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;raww&quot;&gt;r/aww&lt;/h2&gt;

&lt;p&gt;So let’s say you wanted to “scrape” all the newest “images” from 
&lt;a href=&quot;http://reddit.com/r/aww/new/&quot;&gt;r/aww&lt;/a&gt; for teh cuddlez you could:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://www.reddit.com/r/aww/new/.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'user-agent'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Mozilla/5.0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'children'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'url'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; 
&lt;span class=&quot;s&quot;&gt;u'https://youtu.be/nJRf-fJNdJ4'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://i.redd.it/jmctfmktixqy.jpg'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'http://imgur.com/gallery/k5UvK'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://i.redd.it/q0ybf3nlixqy.jpg'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'http://i.imgur.com/JoF5FNd.jpg'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'http://i.imgur.com/NI5GuJf.gifv'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'http://i.imgur.com/UHg5RbU.jpg'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://i.redd.it/5jwksp64hxqy.jpg'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'http://i.imgur.com/Bninome.gifv'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'http://i.imgur.com/gs8rRg4.jpg'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://i.redd.it/m6xpbtuogxqy.jpg'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://i.redd.it/gwenjc8dgxqy.jpg'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'http://i.imgur.com/zLmZJTc.gifv'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'http://i.imgur.com/7ihgzyx.gifv'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'http://imgur.com/gallery/jjr6C'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'http://imgur.com/AkdxXuT.gifv'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://gfycat.com/UnpleasantBothJunco'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://i.redd.it/hk9y3kb8fxqy.jpg'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'http://imgur.com/ADLfEwY'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://i.redd.it/wfn3t1b5fxqy.jpg'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://i.redd.it/wa44h0zaexqy.jpg'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://i.redd.it/viy7gp1cexqy.jpg'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://i.redd.it/a1nw9bcydxqy.png'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://i.redd.it/wmbn7lf2owqy.jpg'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://i.redd.it/yestv4i5dxqy.jpg'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;These URLs would require further processing though as not all of them are 
direct links and not all of them are images however it seems to be a
common request with the image dedicated subreddits.&lt;/p&gt;

&lt;h2 id=&quot;beautifulsoup&quot;&gt;BeautifulSoup&lt;/h2&gt;

&lt;p&gt;You can of course just request the regular URL and process the HTML
 with a parser such as &lt;code class=&quot;highlighter-rouge&quot;&gt;BeautifulSoup&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'http://reddit.com/r/aww/new/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'user-agent'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Mozilla/5.0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'html5lib'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'div.thing'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'data-url'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; 
&lt;span class=&quot;s&quot;&gt;u'https://youtu.be/nJRf-fJNdJ4'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://i.redd.it/jmctfmktixqy.jpg'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'http://imgur.com/gallery/k5UvK'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://i.redd.it/q0ybf3nlixqy.jpg'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'http://i.imgur.com/JoF5FNd.jpg'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'http://i.imgur.com/NI5GuJf.gifv'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'http://i.imgur.com/UHg5RbU.jpg'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://i.redd.it/5jwksp64hxqy.jpg'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'http://i.imgur.com/Bninome.gifv'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'http://i.imgur.com/gs8rRg4.jpg'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://i.redd.it/m6xpbtuogxqy.jpg'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://i.redd.it/gwenjc8dgxqy.jpg'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'http://i.imgur.com/zLmZJTc.gifv'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'http://i.imgur.com/7ihgzyx.gifv'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'http://imgur.com/gallery/jjr6C'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'http://imgur.com/AkdxXuT.gifv'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://gfycat.com/UnpleasantBothJunco'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://i.redd.it/hk9y3kb8fxqy.jpg'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'http://imgur.com/ADLfEwY'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://i.redd.it/wfn3t1b5fxqy.jpg'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://i.redd.it/wa44h0zaexqy.jpg'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://i.redd.it/viy7gp1cexqy.jpg'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://i.redd.it/a1nw9bcydxqy.png'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://i.redd.it/wmbn7lf2owqy.jpg'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;u'https://i.redd.it/yestv4i5dxqy.jpg'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Which to me at least looks like a simpler way of getting the data compared to
the JSON response parsing approach.&lt;/p&gt;

&lt;p&gt;As already mentioned Reddit does have an API with
&lt;a href=&quot;https://github.com/reddit/reddit/wiki/API#rules&quot;&gt;rules / guidelines&lt;/a&gt; and if 
you’re wanting to do some large-scale interaction with Reddit you should
probably go that route and use one of the extensive API interfaces for
your language such as &lt;a href=&quot;https://praw.readthedocs.io/&quot;&gt;PRAW&lt;/a&gt; in the case of
Python.&lt;/p&gt;
</description>
        <pubDate>Tue, 11 Apr 2017 13:25:28 +0100</pubDate>
        <link>http://kaijento.github.io/2017/04/11/web-scraping-reddit.com/</link>
        <guid isPermaLink="true">http://kaijento.github.io/2017/04/11/web-scraping-reddit.com/</guid>
        
        <category>python</category>
        
        <category>requests</category>
        
        <category>webscraping</category>
        
        <category>beautifulsoup</category>
        
        <category>json</category>
        
        <category>praw</category>
        
        
      </item>
    
      <item>
        <title>bash: remove trailing spaces from filenames</title>
        <description>&lt;p&gt;&lt;em&gt;I have a directory full of files that contain trailing spaces
which is causing problems when trying to read them on Windows.
I am booted into Linux and have a bash shell how do I remove the
trailing spaces?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you’re just looking for possible solutions:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;extglob&lt;/code&gt; &lt;small&gt;note: non-recursive&lt;/small&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;shopt&lt;/span&gt; -s dotglob extglob nullglob
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;old &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; ./&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;mv -v &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$old&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;old&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%%+( )&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;globstar + extglob&lt;/code&gt; &lt;small&gt;note: requires bash 4&lt;/small&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;shopt&lt;/span&gt; -s dotglob extglob globstar nullglob
&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;old &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; ./&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;mv -v &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$old&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;old&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%%+( )&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;find + extglob&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find . -name &lt;span class=&quot;s1&quot;&gt;'* '&lt;/span&gt; -exec bash -c &lt;span class=&quot;s1&quot;&gt;'shopt -s extglob; mv -v &quot;$1&quot; &quot;${1%%+( )}&quot;'&lt;/span&gt; _ &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;find + prename&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find . -name &lt;span class=&quot;s1&quot;&gt;'* '&lt;/span&gt; -exec rename -v &lt;span class=&quot;s1&quot;&gt;'s/ +$//'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; +
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;It is &lt;strong&gt;highly recommended&lt;/strong&gt; to have a backup of your data and work on 
a copy in the event of anything going wrong.&lt;/p&gt;

&lt;p&gt;Please be aware that if multiple filenames result in the same name
after trailing space removal they will be overwritten. You may wish to 
use the &lt;code class=&quot;highlighter-rouge&quot;&gt;-n&lt;/code&gt; option with &lt;code class=&quot;highlighter-rouge&quot;&gt;mv&lt;/code&gt; and/or &lt;code class=&quot;highlighter-rouge&quot;&gt;-b / --backup&lt;/code&gt; if your &lt;code class=&quot;highlighter-rouge&quot;&gt;mv&lt;/code&gt; 
supports it.&lt;/p&gt;

&lt;p&gt;The remainder of this article is an explanation of the possible solutions 
that were suggested.&lt;/p&gt;

&lt;h2 id=&quot;test-files&quot;&gt;Test files&lt;/h2&gt;

&lt;p&gt;We’ve created some test files to work with. We use &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; with the &lt;code class=&quot;highlighter-rouge&quot;&gt;-Q&lt;/code&gt; 
option to quote the filenames which allows us to easily see the trailing 
spaces characters:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ls -RQ
&lt;span class=&quot;s2&quot;&gt;&quot;.&quot;&lt;/span&gt;:
&lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;bbq    &quot;&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;c&quot;&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;lol &quot;&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;omg &quot;&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;subdir&quot;&lt;/span&gt;

&lt;span class=&quot;s2&quot;&gt;&quot;./subdir&quot;&lt;/span&gt;:
&lt;span class=&quot;s2&quot;&gt;&quot;filename        &quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Another option could be to use the &lt;code class=&quot;highlighter-rouge&quot;&gt;-ls&lt;/code&gt; option to &lt;code class=&quot;highlighter-rouge&quot;&gt;find&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;find -ls
8665642    0 drwx------   3 user group      111 Apr 10 04:49 .
8665643    0 -rw-------   1 user group        0 Apr 10 04:48 ./lol&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;
8665644    0 -rw-------   1 user group        0 Apr 10 04:48 ./omg&lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;
8665645    0 -rw-------   1 user group        0 Apr 10 04:48 ./a
8665646    0 -rw-------   1 user group        0 Apr 10 04:48 ./b
8665647    0 -rw-------   1 user group        0 Apr 10 04:48 ./c
8665651    0 -rw-------   1 user group        0 Apr 10 04:48 ./bbq&lt;span class=&quot;se&quot;&gt;\ \ \ \ &lt;/span&gt;
4472706    0 drwx------   2 user group       54 Apr 10 04:49 ./subdir
4595526    0 -rw-------   1 user group        0 Apr 10 04:49 ./subdir/filename&lt;span class=&quot;se&quot;&gt;\ \ \ \ \ \ \ \ &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;small&gt;note: GNU &lt;code class=&quot;highlighter-rouge&quot;&gt;find&lt;/code&gt; will default to the current directory &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; 
if you do not give any directory names to process&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;It was not stated in the problem description whether or not a recursive solution
was required. A recursive approach will work for both cases so we will assume 
that is was.&lt;/p&gt;

&lt;p&gt;The non-recursive solution that was suggested above is very similar to the
recursive solution using &lt;code class=&quot;highlighter-rouge&quot;&gt;globstar&lt;/code&gt; which is explained below so it shouldn’t 
need a separate explanation.&lt;/p&gt;

&lt;h2 id=&quot;prename&quot;&gt;prename&lt;/h2&gt;

&lt;p&gt;You may or may not have a &lt;code class=&quot;highlighter-rouge&quot;&gt;rename&lt;/code&gt; command available on your system. There 
is a &lt;code class=&quot;highlighter-rouge&quot;&gt;rename&lt;/code&gt; command that is written in Perl and one that is not. The 
suggested solution that was given will only work with the Perl version.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;rename
Usage: rename &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-v] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-n] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-f] perlexpr &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;filenames]
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;readlink -f /usr/bin/rename
/usr/bin/prename
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;prename
Usage: rename &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-v] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-n] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-f] perlexpr &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;filenames]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you see &lt;code class=&quot;highlighter-rouge&quot;&gt;perlexpr&lt;/code&gt; in the usage output you should be good to go.&lt;/p&gt;

&lt;p&gt;Its &lt;code class=&quot;highlighter-rouge&quot;&gt;-n&lt;/code&gt; option will print out what will happen without acting:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;find -name &lt;span class=&quot;s1&quot;&gt;'* '&lt;/span&gt; -exec rename -n &lt;span class=&quot;s1&quot;&gt;'s/ +$//'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; +
./lol  renamed as ./lol
./omg  renamed as ./omg
./bbq     renamed as ./bbq
./subdir/filename         renamed as ./subdir/filename 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;It should probably quote the filenames though similar to how &lt;code class=&quot;highlighter-rouge&quot;&gt;mv -v&lt;/code&gt; does to make
viewing trailing spaces easier. We’ll replace &lt;code class=&quot;highlighter-rouge&quot;&gt;-n&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;-v&lt;/code&gt; to actually rename
the files:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;find -name &lt;span class=&quot;s1&quot;&gt;'* '&lt;/span&gt; -exec rename -v &lt;span class=&quot;s1&quot;&gt;'s/ +$//'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; +
./lol  renamed as ./lol
./omg  renamed as ./omg
./bbq     renamed as ./bbq
./subdir/filename         renamed as ./subdir/filename
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Let’s check the result:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ls -RQ
&lt;span class=&quot;s2&quot;&gt;&quot;.&quot;&lt;/span&gt;:
&lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;bbq&quot;&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;c&quot;&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;lol&quot;&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;omg&quot;&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;subdir&quot;&lt;/span&gt;

&lt;span class=&quot;s2&quot;&gt;&quot;./subdir&quot;&lt;/span&gt;:
&lt;span class=&quot;s2&quot;&gt;&quot;filename&quot;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;find -ls
8665642    0 drwx------   3 user group      105 Apr 10 04:49 .
8665645    0 -rw-------   1 user group        0 Apr 10 04:48 ./a
8665646    0 -rw-------   1 user group        0 Apr 10 04:48 ./b
8665647    0 -rw-------   1 user group        0 Apr 10 04:48 ./c
4472706    0 drwx------   2 user group       46 Apr 10 04:49 ./subdir
4595526    0 -rw-------   1 user group        0 Apr 10 04:49 ./subdir/filename
8665643    0 -rw-------   1 user group        0 Apr 10 04:48 ./lol
8665644    0 -rw-------   1 user group        0 Apr 10 04:48 ./omg
8665651    0 -rw-------   1 user group        0 Apr 10 04:48 ./bbq
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;-name&lt;/code&gt; option of &lt;code class=&quot;highlighter-rouge&quot;&gt;find&lt;/code&gt; takes a &lt;em&gt;“glob pattern”&lt;/em&gt;. If you’re familiar
with regular expressions the glob pattern used is equivalent to the regex &lt;code class=&quot;highlighter-rouge&quot;&gt;.* $&lt;/code&gt; 
i.e. &lt;em&gt;anything that ends with a space character&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;rename&lt;/code&gt; command allows you to use any &lt;code class=&quot;highlighter-rouge&quot;&gt;perl&lt;/code&gt; code but it’s most common to see 
it used with the &lt;code class=&quot;highlighter-rouge&quot;&gt;s&lt;/code&gt; command. &lt;code class=&quot;highlighter-rouge&quot;&gt;s/ +$//&lt;/code&gt; matches &lt;em&gt;1 or
more space characters followed by the end of the string&lt;/em&gt; and replaces
them with nothing i.e. removes them.&lt;/p&gt;

&lt;p&gt;We could use &lt;code class=&quot;highlighter-rouge&quot;&gt;\s+$&lt;/code&gt; to match any trailing “whitespace” as opposed to just space
characters specifically.&lt;/p&gt;

&lt;p&gt;If you don’t have the Perl &lt;code class=&quot;highlighter-rouge&quot;&gt;rename&lt;/code&gt; command you can use some of bash’s string
manipulation capabilities to achieve the same result.&lt;/p&gt;

&lt;h2 id=&quot;parameter-expansion&quot;&gt;parameter expansion&lt;/h2&gt;

&lt;p&gt;We can use &lt;code class=&quot;highlighter-rouge&quot;&gt;${var%pattern}&lt;/code&gt; to &lt;em&gt;“trim” (remove)&lt;/em&gt; the given &lt;em&gt;pattern&lt;/em&gt; 
from the end of shell variable &lt;em&gt;var&lt;/em&gt;. If you use a double percent i.e. &lt;code class=&quot;highlighter-rouge&quot;&gt;%%&lt;/code&gt; 
it will remove the longest match of &lt;em&gt;pattern&lt;/em&gt; whereas the default is 
the shortest match.&lt;/p&gt;

&lt;p&gt;So if it was just a single trailing space we could do the following:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'omg lol '&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;% &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | sed -n l
omg lol&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;small&gt;note: we’re using &lt;code class=&quot;highlighter-rouge&quot;&gt;sed -n l&lt;/code&gt; here just to show the trailing spaces. &lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt;
denotes the end of the string&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;With multiple trailing spaces this approach wont work:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'omg lol    '&lt;/span&gt; 
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;% &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | sed -n l
omg lol   &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What if we try with &lt;code class=&quot;highlighter-rouge&quot;&gt;%%&lt;/code&gt;?&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%% &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | sed -n l
omg lol   &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Our pattern is just a single space character which will only ever match a single
space character. What we need to do is remove the longest match of &lt;em&gt;1 or more
space characters&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;extglob&quot;&gt;extglob&lt;/h2&gt;

&lt;p&gt;You can do this using the &lt;code class=&quot;highlighter-rouge&quot;&gt;+(pattern)&lt;/code&gt; syntax which matches &lt;em&gt;1 or more&lt;/em&gt;
instances of pattern. It’s not part of the standard globbing syntax which means
that you need to enable &lt;em&gt;extended globbing&lt;/em&gt; to use it:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;shopt&lt;/span&gt; -s extglob
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%%+( )&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | sed -n l
omg lol&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This allows us to replace &lt;code class=&quot;highlighter-rouge&quot;&gt;-exec rename&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;-exec bash&lt;/code&gt; and a &lt;code class=&quot;highlighter-rouge&quot;&gt;mv&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;We’ll use a leading &lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt; to first see what the generated commands would look like:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;find -name &lt;span class=&quot;s1&quot;&gt;'* '&lt;/span&gt; -exec bash -c &lt;span class=&quot;s1&quot;&gt;'shopt -s extglob; echo mv -v &quot;$1&quot; &quot;${1%%+( )}&quot;'&lt;/span&gt; _ &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\;&lt;/span&gt;
mv -v ./subdir/filename         ./subdir/filename
mv -v ./bbq     ./bbq
mv -v ./lol  ./lol
mv -v ./omg  ./omg
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We remove the &lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt; to actually execute the &lt;code class=&quot;highlighter-rouge&quot;&gt;mv&lt;/code&gt; commands:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;find -name &lt;span class=&quot;s1&quot;&gt;'* '&lt;/span&gt; -exec bash -c &lt;span class=&quot;s1&quot;&gt;'shopt -s extglob; mv -v &quot;$1&quot; &quot;${1%%+( )}&quot;'&lt;/span&gt; _ &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\;&lt;/span&gt;
‘./subdir/filename        ’ -&amp;gt; ‘./subdir/filename’
‘./bbq    ’ -&amp;gt; ‘./bbq’
‘./lol ’ -&amp;gt; ‘./lol’
‘./omg ’ -&amp;gt; ‘./omg’
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Check the results:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ls -RQ
&lt;span class=&quot;s2&quot;&gt;&quot;.&quot;&lt;/span&gt;:
&lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;bbq&quot;&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;c&quot;&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;lol&quot;&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;omg&quot;&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;subdir&quot;&lt;/span&gt;

&lt;span class=&quot;s2&quot;&gt;&quot;./subdir&quot;&lt;/span&gt;:
&lt;span class=&quot;s2&quot;&gt;&quot;filename&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The above &lt;code class=&quot;highlighter-rouge&quot;&gt;-exec&lt;/code&gt; command will execute &lt;code class=&quot;highlighter-rouge&quot;&gt;bash&lt;/code&gt; for each file found.&lt;/p&gt;

&lt;p&gt;A common idiom you may see when execing a shell is:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-exec bash -c &lt;span class=&quot;s1&quot;&gt;'for path; do ...; done'&lt;/span&gt; _ &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; +
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So you may see the above &lt;code class=&quot;highlighter-rouge&quot;&gt;-exec&lt;/code&gt; command written like:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-exec bash -c &lt;span class=&quot;s1&quot;&gt;'
  shopt -s extglob; for old; do mv -v &quot;$old&quot; &quot;${old%%+( )}&quot;; done'&lt;/span&gt; _ &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; +
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This approach could save some forking of bash processes but it’s probably
not going to make too much of a difference.&lt;/p&gt;

&lt;h2 id=&quot;globstar&quot;&gt;globstar&lt;/h2&gt;

&lt;p&gt;Version 4 of &lt;code class=&quot;highlighter-rouge&quot;&gt;bash&lt;/code&gt; added the &lt;code class=&quot;highlighter-rouge&quot;&gt;globstar&lt;/code&gt; shell option which allows &lt;em&gt;recursive globbing&lt;/em&gt;.
Using this we can remove the need for &lt;code class=&quot;highlighter-rouge&quot;&gt;find&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;shopt&lt;/span&gt; -s globstar
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;old &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; ./&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;‘&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$old&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;’&quot;&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
‘./bbq    ’
‘./lol ’
‘./omg ’
‘./subdir/filename        ’
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We still use the &lt;code class=&quot;highlighter-rouge&quot;&gt;*' '&lt;/code&gt; pattern however before it we use &lt;code class=&quot;highlighter-rouge&quot;&gt;./**/&lt;/code&gt; which matches 
all directories and subdirectories.&lt;/p&gt;

&lt;p&gt;So let’s combine the &lt;code class=&quot;highlighter-rouge&quot;&gt;extglob&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;globstar&lt;/code&gt; operations:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;shopt&lt;/span&gt; -s extglob globstar
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;old &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; ./&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;mv -v &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$old&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;old&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%%+( )&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;done
&lt;/span&gt;mv -v ./bbq     ./bbq
mv -v ./lol  ./lol
mv -v ./omg  ./omg
mv -v ./subdir/filename         ./subdir/filename
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Output looks okay so we remove the &lt;code class=&quot;highlighter-rouge&quot;&gt;echo&lt;/code&gt; once again to 
execute the &lt;code class=&quot;highlighter-rouge&quot;&gt;mv&lt;/code&gt; commands:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;shopt&lt;/span&gt; -s extglob globstar
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;old &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; ./&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;mv -v &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$old&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;old&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%%+( )&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
‘./bbq    ’ -&amp;gt; ‘./bbq’
‘./lol ’ -&amp;gt; ‘./lol’
‘./omg ’ -&amp;gt; ‘./omg’
‘./subdir/filename        ’ -&amp;gt; ‘./subdir/filename’
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Check the result:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;ls -RQ
&lt;span class=&quot;s2&quot;&gt;&quot;.&quot;&lt;/span&gt;:
&lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;bbq&quot;&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;c&quot;&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;lol&quot;&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;omg&quot;&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;subdir&quot;&lt;/span&gt;

&lt;span class=&quot;s2&quot;&gt;&quot;./subdir&quot;&lt;/span&gt;:
&lt;span class=&quot;s2&quot;&gt;&quot;filename&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;nullglob--dotglob&quot;&gt;nullglob + dotglob&lt;/h2&gt;

&lt;p&gt;The files have been renamed correctly. Let’s now create a new &lt;em&gt;“hidden”&lt;/em&gt; file
and run our loop again:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;touch &lt;span class=&quot;s1&quot;&gt;'.hidden file       '&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;old &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; ./&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;mv -v &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$old&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;old&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%%+( )&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;done
&lt;/span&gt;mv -v ./&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;  ./&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;U wot m8?&lt;/p&gt;

&lt;p&gt;If a glob (well, technically it’s a &lt;em&gt;pathname expansion&lt;/em&gt; here) does not match 
the default behaviour is that the glob will be returned.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;f &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; ./&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.nothere; &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;found: &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;done
&lt;/span&gt;found: ./&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.nothere
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To disable this we can enable &lt;code class=&quot;highlighter-rouge&quot;&gt;nullglob&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;shopt&lt;/span&gt; -s nullglob
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;old &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; ./&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;mv -v &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$old&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;old&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%%+( )&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We created a new &lt;em&gt;“hidden”&lt;/em&gt; file with trailing spaces though so why didn’t 
it match?&lt;/p&gt;

&lt;p&gt;By default the leading &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; at the start of the name (or after a &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt;) must
be explicitly matched. This behaviour can be changed with &lt;code class=&quot;highlighter-rouge&quot;&gt;dotglob&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;shopt&lt;/span&gt; -s dotglob
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;old &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; ./&lt;span class=&quot;k&quot;&gt;**&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;mv -v &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$old&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;old&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%%+( )&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;; &lt;span class=&quot;k&quot;&gt;done
&lt;/span&gt;mv -v ./.hidden file        ./.hidden file
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So without &lt;code class=&quot;highlighter-rouge&quot;&gt;dotglob&lt;/code&gt; it would miss &lt;em&gt;hidden&lt;/em&gt; files and it would also miss any
files contained in &lt;em&gt;hidden&lt;/em&gt; directories.&lt;/p&gt;

&lt;p&gt;You may or may not want this behaviour so you can include or exclude &lt;code class=&quot;highlighter-rouge&quot;&gt;dotglob&lt;/code&gt; as
you see fit.&lt;/p&gt;
</description>
        <pubDate>Mon, 10 Apr 2017 04:51:22 +0100</pubDate>
        <link>http://kaijento.github.io/2017/04/10/bash-remove-trailing-spaces-from-filenames/</link>
        <guid isPermaLink="true">http://kaijento.github.io/2017/04/10/bash-remove-trailing-spaces-from-filenames/</guid>
        
        <category>bash</category>
        
        <category>find</category>
        
        <category>perl</category>
        
        <category>regex</category>
        
        <category>glob</category>
        
        <category>rename</category>
        
        <category>linux</category>
        
        
      </item>
    
      <item>
        <title>Web scraping: dotabuff.com</title>
        <description>&lt;p&gt;The task is to extract out the stats from the &lt;em&gt;WORST VERSUS&lt;/em&gt; table
on a &lt;a href=&quot;https://dotabuff.com&quot;&gt;Defense of the Ancients&lt;/a&gt; hero page using 
Python. The person did not want to use &lt;code class=&quot;highlighter-rouge&quot;&gt;BeautifulSoup&lt;/code&gt; as they are 
only learning Python and feel it would be better for learning purposes
to complete the task using &lt;em&gt;“vanilla Python”&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The example URL we’ve been given is of &lt;code class=&quot;highlighter-rouge&quot;&gt;Abaddon&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.dotabuff.com/heroes/abaddon&quot;&gt;https://www.dotabuff.com/heroes/abaddon&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let’s open up the page in our browser and check out the &lt;code class=&quot;highlighter-rouge&quot;&gt;Inspector&lt;/code&gt; tab:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/1491732263-dotabuff.com.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The HTML for the table we’re after looks something like this:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;section&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;header&amp;gt;&lt;/span&gt;Worst Versus&lt;span class=&quot;nt&quot;&gt;&amp;lt;small&amp;gt;&lt;/span&gt;This Week
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;more&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/heroes/abaddon/matchups&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;lt;i&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fa fa-plus-square&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/i&amp;gt;&lt;/span&gt; more &lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&amp;lt;/small&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;article&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;table&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;thead&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;th&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;colspan=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Item&lt;span class=&quot;nt&quot;&gt;&amp;lt;/th&amp;gt;&amp;lt;th&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cell-large&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Advantage&lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;r-none-mobile&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;
          &lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;th&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cell-large&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Win Rate&lt;span class=&quot;nt&quot;&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;th&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cell-large&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Matches&lt;span class=&quot;nt&quot;&gt;&amp;lt;/th&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/tr&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/thead&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;tbody&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-link-to=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/heroes/anti-mage&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cell-icon&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;
          &lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;link-type-hero&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/heroes/anti-mage&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Anti-Mage&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/td&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;-4.54% ...
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;td&amp;gt;&lt;/span&gt;54.25% ...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We’ve truncated the full contents for formatting purposes but we can see that there are no
distinct markers for the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;table&amp;gt;&lt;/code&gt; in question. Normally you may see a specific 
&lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt; attribute for the different sections to allows us to easily locate it.&lt;/p&gt;

&lt;h2 id=&quot;regexing-html&quot;&gt;regexing html&lt;/h2&gt;

&lt;p&gt;According to &lt;em&gt;“the internet”&lt;/em&gt; you’re never supposed to use regular expressions 
and you’re never never supposed to use regular expressions on HTML.&lt;/p&gt;

&lt;p&gt;So I guess it’s time for some &lt;em&gt;“Epic lulz”&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'https://www.dotabuff.com/heroes/abaddon'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'user-agent'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Mozilla/5.0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;section&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'&amp;lt;section&amp;gt;&amp;lt;header&amp;gt;Worst Versus.+?&amp;lt;/section&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;group&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'&amp;lt;th[^&amp;gt;]*&amp;gt;([^&amp;lt;]+)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Item'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Advantage'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Win Rate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Matches'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'&amp;lt;td&amp;gt;(?:&amp;lt;a[^&amp;gt;]*&amp;gt;)?([^&amp;lt;]+)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;section&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Anti-Mage'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-4.57&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'54.15&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'48,635'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Undying'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-3.60&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'52.26&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'10,975'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;rows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Anti-Mage'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-4.57&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'54.15&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'48,635'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Undying'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-3.60&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'52.26&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'10,975'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Outworld Devourer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-3.02&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'56.10&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'23,404'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Lone Druid'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-2.97&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'64.06&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'7,340'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Io'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-2.91&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'66.74&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'4,092'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Lycan'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-2.81&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'52.12&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'6,978'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Doom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-2.75&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'61.36&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'12,941'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Broodmother'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-2.49&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'64.96&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'5,559'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Lina'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-2.39&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'56.13&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'52,591'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Invoker'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-2.32&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'56.28&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'86,323'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So the regex &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;section&amp;gt;&amp;lt;header&amp;gt;Worst Versus.+?&amp;lt;/section&amp;gt;&lt;/code&gt; isolates the 
&lt;em&gt;WORST VERSUS&lt;/em&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;section&amp;gt;&lt;/code&gt; for us. If there were nested &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;section&amp;gt;&lt;/code&gt; tags
this would not work correctly which is one of the reasons that parsing HTML
with regex is usually discouraged.&lt;/p&gt;

&lt;p&gt;The data we’re after comes after every plain &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;td&amp;gt;&lt;/code&gt; tag inside the section.
The only one that differs is the Item name as that has an &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;a ...&amp;gt;&lt;/code&gt; tag.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;(?:&amp;lt;a[^&amp;gt;]*&amp;gt;)?&lt;/code&gt; part of our second regex handles this case. &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;a[^&amp;gt;]*&amp;gt;&lt;/code&gt; 
matches any &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;a&amp;gt;&lt;/code&gt; tag the &lt;code class=&quot;highlighter-rouge&quot;&gt;(?:)&lt;/code&gt; makes the group non-capturing and the 
trailing &lt;code class=&quot;highlighter-rouge&quot;&gt;?&lt;/code&gt; makes it optional meaning that it may or may not be present.&lt;/p&gt;

&lt;p&gt;Finally we have &lt;code class=&quot;highlighter-rouge&quot;&gt;([^&amp;lt;]+)&lt;/code&gt; we matches and captures &lt;em&gt;not “&amp;lt;” 1 or more times&lt;/em&gt;
which is how you can match up to the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;&lt;/code&gt; character i.e. the start of the closing
tag.&lt;/p&gt;

&lt;p&gt;Because &lt;code class=&quot;highlighter-rouge&quot;&gt;re.findall()&lt;/code&gt; gives us back a flat list of matches we need to process
it 4 items at a time which we can do with a combination of &lt;code class=&quot;highlighter-rouge&quot;&gt;range()&lt;/code&gt; and 
slicing.&lt;/p&gt;

&lt;h2 id=&quot;beautifulsoup&quot;&gt;BeautifulSoup&lt;/h2&gt;

&lt;p&gt;So that gives us the data needed, how could we approach it using a parser
such as &lt;code class=&quot;highlighter-rouge&quot;&gt;BeautifulSoup&lt;/code&gt;?&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;bs4&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'html5lib'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As the particular section / table we’re after doesn’t have any distinct 
attributes we could just use number position. It is the fifth table
on the page (this was discovered by trial and error i.e. by
inspecting &lt;code class=&quot;highlighter-rouge&quot;&gt;soup('table')[0]&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;soup('table')[1]&lt;/code&gt;, etc.)&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'table'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Note here we’re using the shorthand form of &lt;code class=&quot;highlighter-rouge&quot;&gt;soup.find_all('table')&lt;/code&gt; which
you can use if you prefer.&lt;/p&gt;

&lt;p&gt;In cases where you can’t isolate a tag by a distinctive attribute another 
useful approach can be to use the &lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt; argument to the find
methods. This allows you to match based on the content of a tag. Here
we could search for the &lt;code class=&quot;highlighter-rouge&quot;&gt;Worst Versus&lt;/code&gt; string inside the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;header&amp;gt;&lt;/code&gt; tag:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'header'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Worst Versus'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Hmm… pls y u no result?&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;header&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'header'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; 
&lt;span class=&quot;s&quot;&gt;'Lane Presence'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'Time Played'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'Dotabuff Plus'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Only &lt;code class=&quot;highlighter-rouge&quot;&gt;3&lt;/code&gt; results that does not look right…&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'header'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We should have &lt;code class=&quot;highlighter-rouge&quot;&gt;14&lt;/code&gt; …&lt;/p&gt;

&lt;h2 id=&quot;string-vs-text&quot;&gt;.string vs .text&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;header&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'header'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Lane Presence'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Lane Presence'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Trending Guide2017-04-07 more'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Most Popular Ability Build16.01&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;% &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Build Rate more'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Most Used ItemsThis Week more'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Best VersusThis Week more'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Worst VersusThis Week more'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Win RateThis Week more'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Pick RateThis Week more'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Meta TrendsThis Week more'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Talent Usage more'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Hero Rankings more'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Time Played'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Time Played'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Hero Attributes more'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Dotabuff Plus'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Dotabuff Plus'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The issue is that because some of the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;header&amp;gt;&lt;/code&gt; tags contain children tags
&lt;code class=&quot;highlighter-rouge&quot;&gt;.string&lt;/code&gt; will be empty as the content is contained inside the children.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;header&amp;gt;&lt;/span&gt;Lane Presence&lt;span class=&quot;nt&quot;&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;
...
&lt;span class=&quot;nt&quot;&gt;&amp;lt;header&amp;gt;&lt;/span&gt;Worst Versus&lt;span class=&quot;nt&quot;&gt;&amp;lt;small&amp;gt;&lt;/span&gt;This Week
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.text&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;.get_text()&lt;/code&gt; on the other hand will give you the combined 
string content of a tag and all of its children.&lt;/p&gt;

&lt;p&gt;So this means we cannot use the &lt;code class=&quot;highlighter-rouge&quot;&gt;find('header', string=...)&lt;/code&gt; approach. It is still
possible to locate it based on the &lt;code class=&quot;highlighter-rouge&quot;&gt;Worst Versus&lt;/code&gt; string but it’s rather
verbose:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;header&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;header&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'header'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Worst Versus'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Worst&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Versus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;small&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;This&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Week&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.strings&lt;/code&gt; gives you a generator of all the contained strings so we can use 
&lt;code class=&quot;highlighter-rouge&quot;&gt;next(headers.strings)&lt;/code&gt; to test against the first one.&lt;/p&gt;

&lt;p&gt;I’ve not checked but &lt;code class=&quot;highlighter-rouge&quot;&gt;.text&lt;/code&gt; mentioned above probably just 
does &lt;code class=&quot;highlighter-rouge&quot;&gt;''.join(tag.strings)&lt;/code&gt; in the background.&lt;/p&gt;

&lt;p&gt;From the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;header&amp;gt;&lt;/code&gt; tag we could &lt;code class=&quot;highlighter-rouge&quot;&gt;find_next('table')&lt;/code&gt; to then get the correct table. 
We will just rely on the position approach for the rest of this example by taking the 
&lt;em&gt;“fifth table”&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'table'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;pandasread_html&quot;&gt;pandas.read_html()&lt;/h2&gt;

&lt;p&gt;So now that we have the table in question how do we extract the stats?&lt;/p&gt;

&lt;p&gt;One possible approach could be to load it up as a &lt;code class=&quot;highlighter-rouge&quot;&gt;pandas&lt;/code&gt; DataFrame
using &lt;code class=&quot;highlighter-rouge&quot;&gt;pandas.read_html()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;read_html()&lt;/code&gt; can take a URL, file object or even a string and will
return a list of dataframes containing the parsed tables found. The
reason we don’t pass it our URL directly is that it uses &lt;code class=&quot;highlighter-rouge&quot;&gt;urllib&lt;/code&gt; to
fetch the data and there is no way (currently) to change the 
&lt;code class=&quot;highlighter-rouge&quot;&gt;user-agent&lt;/code&gt; header for the request and in this case &lt;code class=&quot;highlighter-rouge&quot;&gt;dotabuff.com&lt;/code&gt; 
blocks the default &lt;code class=&quot;highlighter-rouge&quot;&gt;urllib&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;requests&lt;/code&gt; user-agent strings.&lt;/p&gt;

&lt;p&gt;Let’s pass it &lt;code class=&quot;highlighter-rouge&quot;&gt;str(table)&lt;/code&gt; and see how it does:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pandas&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pandas&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;Item&lt;/span&gt;          &lt;span class=&quot;n&quot;&gt;Advantage&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Win&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Rate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Matches&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;Unnamed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;NaN&lt;/span&gt;          &lt;span class=&quot;n&quot;&gt;Anti&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Mage&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;4.59&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;54.14&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;       &lt;span class=&quot;mi&quot;&gt;49012&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;NaN&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;Undying&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.56&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;52.31&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;       &lt;span class=&quot;mi&quot;&gt;11056&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;NaN&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;Outworld&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Devourer&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.00&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;56.12&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;       &lt;span class=&quot;mi&quot;&gt;23590&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;NaN&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;Lone&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Druid&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.99&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;64.04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;        &lt;span class=&quot;mi&quot;&gt;7386&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;NaN&lt;/span&gt;                 &lt;span class=&quot;n&quot;&gt;Io&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.91&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;66.75&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;        &lt;span class=&quot;mi&quot;&gt;4111&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;NaN&lt;/span&gt;              &lt;span class=&quot;n&quot;&gt;Lycan&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.87&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;52.06&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;        &lt;span class=&quot;mi&quot;&gt;7026&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;NaN&lt;/span&gt;               &lt;span class=&quot;n&quot;&gt;Doom&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.71&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;61.43&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;       &lt;span class=&quot;mi&quot;&gt;13045&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;NaN&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;Broodmother&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.44&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;65.00&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;        &lt;span class=&quot;mi&quot;&gt;5600&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;NaN&lt;/span&gt;               &lt;span class=&quot;n&quot;&gt;Lina&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.39&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;56.13&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;       &lt;span class=&quot;mi&quot;&gt;53033&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;NaN&lt;/span&gt;              &lt;span class=&quot;n&quot;&gt;Meepo&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.38&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;61.92&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;       &lt;span class=&quot;mi&quot;&gt;10465&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The problem is that we have &lt;code class=&quot;highlighter-rouge&quot;&gt;4&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;th&amp;gt;&lt;/code&gt; tags but each row contains &lt;code class=&quot;highlighter-rouge&quot;&gt;5&lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;td&amp;gt;&lt;/code&gt; tags. The first &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;td&amp;gt;&lt;/code&gt; holding the Item image:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;tr&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-link-to=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/heroes/anti-mage&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;td&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cell-icon&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We could remove the first &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;td&amp;gt;&lt;/code&gt; tag from each &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; inside the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tbody&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'tr'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decompose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pandas&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;                &lt;span class=&quot;n&quot;&gt;Item&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Advantage&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Win&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Rate&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;Matches&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;          &lt;span class=&quot;n&quot;&gt;Anti&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Mage&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;4.59&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;54.14&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;49012&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;Undying&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.56&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;52.31&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;11056&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;Outworld&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Devourer&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.00&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;56.12&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;23590&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;Lone&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Druid&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.99&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;64.04&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;     &lt;span class=&quot;mi&quot;&gt;7386&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;                 &lt;span class=&quot;n&quot;&gt;Io&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.91&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;66.75&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;     &lt;span class=&quot;mi&quot;&gt;4111&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;              &lt;span class=&quot;n&quot;&gt;Lycan&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.87&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;52.06&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;     &lt;span class=&quot;mi&quot;&gt;7026&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;               &lt;span class=&quot;n&quot;&gt;Doom&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.71&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;61.43&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;13045&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;Broodmother&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.44&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;65.00&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;     &lt;span class=&quot;mi&quot;&gt;5600&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;               &lt;span class=&quot;n&quot;&gt;Lina&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.39&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;56.13&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;53033&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;              &lt;span class=&quot;n&quot;&gt;Meepo&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.38&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;61.92&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;10465&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We can use &lt;code class=&quot;highlighter-rouge&quot;&gt;.decompose()&lt;/code&gt; to remove / destroy a tag. There is also &lt;code class=&quot;highlighter-rouge&quot;&gt;extract()&lt;/code&gt; 
which returns the removed tag if needed. Written out fully using &lt;code class=&quot;highlighter-rouge&quot;&gt;find_all()&lt;/code&gt;
and &lt;code class=&quot;highlighter-rouge&quot;&gt;find()&lt;/code&gt; calls it would look like:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'tbody'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'tr'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'td'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decompse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I prefer to use the shorthand variations though.&lt;/p&gt;

&lt;p&gt;It wasn’t specified what was to be done to the data but after it’s loaded into
a DataFrame you could use methods such as &lt;code class=&quot;highlighter-rouge&quot;&gt;to_csv()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;to_excel()&lt;/code&gt; or 
&lt;code class=&quot;highlighter-rouge&quot;&gt;to_sql()&lt;/code&gt; depending on the exact goal.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stats&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pandas&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read_html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stats&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to_csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Gives us:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Item,Advantage,Win Rate,Matches
Anti-Mage,-4.59%,54.14%,49012
Undying,-3.56%,52.31%,11056
Outworld Devourer,-3.00%,56.12%,23590
Lone Druid,-2.99%,64.04%,7386
Io,-2.91%,66.75%,4111
Lycan,-2.87%,52.06%,7026
Doom,-2.71%,61.43%,13045
Broodmother,-2.44%,65.00%,5600
Lina,-2.39%,56.13%,53033
Meepo,-2.38%,61.92%,10465
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;processing-a-table-with-beautifulsoup&quot;&gt;processing a table with BeautifulSoup&lt;/h2&gt;

&lt;p&gt;You could also extract the data just using &lt;code class=&quot;highlighter-rouge&quot;&gt;BeautifulSoup&lt;/code&gt; and some
&lt;em&gt;list comprehensions&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The headers:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'table'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;th&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'th'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Item'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Advantage'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Win Rate'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Matches'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The rows:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;td&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'td'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tbody&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'tr'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Anti-Mage'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-4.59&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'54.14&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'49,012'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Undying'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-3.56&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'52.31&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'11,056'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;From there you could easily use the &lt;code class=&quot;highlighter-rouge&quot;&gt;csv&lt;/code&gt; module to export it to CSV or perhaps
even use &lt;code class=&quot;highlighter-rouge&quot;&gt;dict(zip(headers, row))&lt;/code&gt; to build a list of dict and export it to JSON&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;th&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;th&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'th'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rows&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;td&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;td&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'td'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tr&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tbody&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'tr'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stats&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dumps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sort_keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;Advantage&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-4.59&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;Item&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Anti-Mage&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;Matches&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;49,012&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;Win Rate&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;54.14&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;Advantage&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;-3.56&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;Item&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Undying&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;Matches&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;11,056&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;Win Rate&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;52.31&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;It all depends on what you want to do with the data.&lt;/p&gt;
</description>
        <pubDate>Sun, 09 Apr 2017 10:59:00 +0100</pubDate>
        <link>http://kaijento.github.io/2017/04/09/web-scraping-dotabuff.com/</link>
        <guid isPermaLink="true">http://kaijento.github.io/2017/04/09/web-scraping-dotabuff.com/</guid>
        
        <category>python</category>
        
        <category>webscraping</category>
        
        <category>beautifulsoup</category>
        
        <category>regex</category>
        
        <category>pandas</category>
        
        
      </item>
    
      <item>
        <title>Python: convert a text file into a dictionary</title>
        <description>&lt;p&gt;Given the following data in a text file the task is
to convert it into a Python dict having the command
names as the keys and the command descriptions as the
values.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;commands.txt&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ABBREV                                          Abbreviation processsor
ADDISK                                               (Operator command)
ADD_REMOTE_ID                        Sets up user id for remote systems
AMLC                                                 (Operator command)
ARCHIVE                                     Archives disk files to tape
ARCHIVE_RELEASE                 Releases an ARCHIVE tape for future use
ARCHIVE_RESTORE                 Restores files archived on tape to disk
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We will start with some output:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;python build-commands.py 
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;ABBREV&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;Abbreviation processsor&quot;&lt;/span&gt;, 
    &lt;span class=&quot;s2&quot;&gt;&quot;ADDISK&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;(Operator command)&quot;&lt;/span&gt;, 
    &lt;span class=&quot;s2&quot;&gt;&quot;ADD_REMOTE_ID&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;Sets up user id for remote systems&quot;&lt;/span&gt;, 
    &lt;span class=&quot;s2&quot;&gt;&quot;AMLC&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;(Operator command)&quot;&lt;/span&gt;, 
    &lt;span class=&quot;s2&quot;&gt;&quot;ARCHIVE&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;Archives disk files to tape&quot;&lt;/span&gt;, 
    &lt;span class=&quot;s2&quot;&gt;&quot;ARCHIVE_RELEASE&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;Releases an ARCHIVE tape for future use&quot;&lt;/span&gt;, 
    &lt;span class=&quot;s2&quot;&gt;&quot;ARCHIVE_RESTORE&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;Restores files archived on tape to disk&quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The code that generated it:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'commands.txt'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;commands&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dumps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sort_keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;json&lt;/code&gt; module is only being used here as a way to pretty-print our dict.
If you’ve never seen &lt;code class=&quot;highlighter-rouge&quot;&gt;with&lt;/code&gt; before it’s commonly used for opening files.
When the &lt;code class=&quot;highlighter-rouge&quot;&gt;with&lt;/code&gt; block is exited it will automatically call &lt;code class=&quot;highlighter-rouge&quot;&gt;.close()&lt;/code&gt; on the
file for us.&lt;/p&gt;

&lt;h2 id=&quot;split&quot;&gt;split()&lt;/h2&gt;

&lt;p&gt;You have probably encountered&lt;code class=&quot;highlighter-rouge&quot;&gt;split()&lt;/code&gt; before but its second argument may be new to
you.&lt;/p&gt;

&lt;p&gt;Note that in Python 3 you can pass it as the named argument &lt;code class=&quot;highlighter-rouge&quot;&gt;maxsplit&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'ABBREV                                          Abbreviation processsor&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ABBREV'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Abbreviation'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'processsor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ABBREV'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
&lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
&lt;span class=&quot;s&quot;&gt;'Abbreviation'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'processsor&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ABBREV'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'                                         Abbreviation processsor&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So instead of splitting on each space it splits on the first space only which leaves 
the description string intact albeit with surrounding whitespace that needs to be trimmed.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ABBREV'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'                                         Abbreviation processsor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'ABBREV'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'                                         Abbreviation processsor'&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;'Abbreviation processsor'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So now we have &lt;code class=&quot;highlighter-rouge&quot;&gt;command&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;description&lt;/code&gt; trimmed correctly we simply add them to 
the dict.&lt;/p&gt;

&lt;p&gt;There is, however, another possible approach.&lt;/p&gt;

&lt;h2 id=&quot;splitnone-1&quot;&gt;split(None, 1)&lt;/h2&gt;

&lt;p&gt;Instead of specifying to split on a space character we can however take advantage of the
default behaviour of &lt;code class=&quot;highlighter-rouge&quot;&gt;split()&lt;/code&gt; which is &lt;code class=&quot;highlighter-rouge&quot;&gt;sep=None&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ABBREV'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'                                         Abbreviation processsor&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ABBREV'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Abbreviation processsor&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ABBREV'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Abbreviation processsor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In Python 3 you could also use the named-argument approach i.e. &lt;code class=&quot;highlighter-rouge&quot;&gt;.split(maxsplit=1)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This would allow us to use &lt;code class=&quot;highlighter-rouge&quot;&gt;dict()&lt;/code&gt; with a &lt;em&gt;generator statement&lt;/em&gt; to construct our
dict:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;commands&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dumps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sort_keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;ABBREV&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Abbreviation processsor&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;&quot;ADDISK&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;(Operator command)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;&quot;ADD_REMOTE_ID&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Sets up user id for remote systems&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;&quot;AMLC&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;(Operator command)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;&quot;ARCHIVE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Archives disk files to tape&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;&quot;ARCHIVE_RELEASE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Releases an ARCHIVE tape for future use&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;&quot;ARCHIVE_RESTORE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Restores files archived on tape to disk&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;dictrefindall&quot;&gt;dict(re.findall())&lt;/h2&gt;

&lt;p&gt;Finally you may have experience using regular expressions in which
case you could pass the result of &lt;code class=&quot;highlighter-rouge&quot;&gt;re.findall()&lt;/code&gt; directly to &lt;code class=&quot;highlighter-rouge&quot;&gt;dict()&lt;/code&gt;
to create the desired result:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;commands&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;findall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;S+)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s+(.+)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dumps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sort_keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;ABBREV&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Abbreviation processsor&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;&quot;ADDISK&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;(Operator command)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;&quot;ADD_REMOTE_ID&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Sets up user id for remote systems&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;&quot;AMLC&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;(Operator command)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;&quot;ARCHIVE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Archives disk files to tape&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;&quot;ARCHIVE_RELEASE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Releases an ARCHIVE tape for future use&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;&quot;ARCHIVE_RESTORE&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Restores files archived on tape to disk&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;(\S+)&lt;/code&gt; matches and captures the command name i.e. &lt;em&gt;1 or more non-whitespace
characters&lt;/em&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;\s+&lt;/code&gt; then matches the sequence of &lt;em&gt;1 or more whitespace 
characters&lt;/em&gt; in between the command name and description.&lt;/p&gt;

&lt;p&gt;Finally, the description is captured with &lt;code class=&quot;highlighter-rouge&quot;&gt;(.+)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It may also be worth noting that with this approach we’re passing the full 
file contents as a single string with the &lt;code class=&quot;highlighter-rouge&quot;&gt;fh.read()&lt;/code&gt; call although that
could be changed if needed.&lt;/p&gt;
</description>
        <pubDate>Sun, 09 Apr 2017 06:24:34 +0100</pubDate>
        <link>http://kaijento.github.io/2017/04/09/python-convert-a-text-file-into-a-dict/</link>
        <guid isPermaLink="true">http://kaijento.github.io/2017/04/09/python-convert-a-text-file-into-a-dict/</guid>
        
        <category>python</category>
        
        <category>regex</category>
        
        
      </item>
    
      <item>
        <title>Python: fixing broken &quot;CSV&quot; data</title>
        <description>&lt;p&gt;We are given the following “CSV” data which we are asked
to “fix” using Python:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;not-quite.csv&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;10AT&amp;amp;T$146,801
11General Electric$140,389
12AmerisourceBergen$135,962
13Verizon$131,620
14Chevron$131,118
15Costco$116,199
16Fannie Mae$110,359
17Kroger$109,830
18Amazon.com$107,006
19Walgreens Boots Alliance$103,444
20HP$103,355
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As it turns out it’s not really CSV data at all as the columns are all 
merged into one. The data looks like it came from the 
&lt;a href=&quot;http://beta.fortune.com/fortune500/list&quot;&gt;Fortune 500 list&lt;/a&gt;
albeit “incorrectly”.&lt;/p&gt;

&lt;p&gt;So what do we know? We know the rank is going to be the first sequence 
of digits on the line.  The name of the company will then be everything 
up to but not including the dollar sign.  The revenue will be everything 
after the dollar sign from which we want to remove the comma.&lt;/p&gt;

&lt;h2 id=&quot;research&quot;&gt;re.search()&lt;/h2&gt;

&lt;p&gt;This sounds like a job for a regular expression.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;not-quite-csv.py&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;fileinput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;re&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fileinput&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rank&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;revenue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;r'(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;d+)(.+)&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;$(.+)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;revenue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;revenue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;','&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;','&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rank&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;revenue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;fileinput&lt;/code&gt; module is a simple way to write a filter-like program that
processes input line by line. It handles reading data from filenames passed
as arguments and data given on stdin. It can also be used to overwrite
files with the new data like how the &lt;code class=&quot;highlighter-rouge&quot;&gt;-i&lt;/code&gt; option works on &lt;code class=&quot;highlighter-rouge&quot;&gt;perl&lt;/code&gt; and some
versions of &lt;code class=&quot;highlighter-rouge&quot;&gt;sed&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So for the regex we have &lt;code class=&quot;highlighter-rouge&quot;&gt;(\d+)&lt;/code&gt; which matches and captures 
&lt;em&gt;1 or more digits&lt;/em&gt; i.e. the &lt;em&gt;rank number&lt;/em&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;()&lt;/code&gt; is used to
create a capture group. We could have used &lt;code class=&quot;highlighter-rouge&quot;&gt;^&lt;/code&gt; (which matches the start
of the string) in our pattern but all of the lines we’re working with
start with digits so it’s not needed.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;(.+)\$&lt;/code&gt; matches and captures everything up to the occurrence of a dollar sign. &lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt;
matches the end of the string in regex so it needs to be escaped to match literally.&lt;/p&gt;

&lt;p&gt;Finally &lt;code class=&quot;highlighter-rouge&quot;&gt;(.+)&lt;/code&gt; captures everything else on the line i.e. the revenue amount.&lt;/p&gt;

&lt;p&gt;We then remove any commas from the revenue amount with &lt;code class=&quot;highlighter-rouge&quot;&gt;.replace(',', '')&lt;/code&gt; and join
the values back using comma as the delimiter.&lt;/p&gt;

&lt;p&gt;Here is a sample run:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;python not-quite-csv.py not-quite.csv
10,AT&amp;amp;T,146801
11,General Electric,140389
12,AmerisourceBergen,135962
13,Verizon,131620
14,Chevron,131118
15,Costco,116199
16,Fannie Mae,110359
17,Kroger,109830
18,Amazon.com,107006
19,Walgreens Boots Alliance,103444
20,HP,103355
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;','.join()&lt;/code&gt; we could use the &lt;code class=&quot;highlighter-rouge&quot;&gt;csv&lt;/code&gt; module which would handle things
like automatic quoting of fields that contain the delimiter but the sample data
we were given was “simple” meaning that it was not possible for the company
names to contain a comma.&lt;/p&gt;

&lt;h2 id=&quot;perl&quot;&gt;perl&lt;/h2&gt;

&lt;p&gt;If you do not have to use Python specifically you may also consider using
&lt;code class=&quot;highlighter-rouge&quot;&gt;perl&lt;/code&gt; to solve this problem:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;perl -pe &lt;span class=&quot;s1&quot;&gt;'s/(\d+)(.+)\$(.+)/&quot;$1,$2,&quot;.$3=~s\/,\/\/gr/e'&lt;/span&gt; not-quite.csv 
10,AT&amp;amp;T,146801
11,General Electric,140389
12,AmerisourceBergen,135962
13,Verizon,131620
14,Chevron,131118
15,Costco,116199
16,Fannie Mae,110359
17,Kroger,109830
18,Amazon.com,107006
19,Walgreens Boots Alliance,103444
20,HP,103355
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;-p&lt;/code&gt; option adds a loop like the &lt;code class=&quot;highlighter-rouge&quot;&gt;for line in fileinput.input()&lt;/code&gt; loop
from the Python example. The &lt;code class=&quot;highlighter-rouge&quot;&gt;s///&lt;/code&gt; command is the same as &lt;code class=&quot;highlighter-rouge&quot;&gt;re.sub()&lt;/code&gt; it
takes a pattern and a replacement. The pattern here is the same as we used
in the Python code so it needs no explanation.&lt;/p&gt;

&lt;p&gt;So we’re using the &lt;code class=&quot;highlighter-rouge&quot;&gt;e&lt;/code&gt; modifier on the &lt;code class=&quot;highlighter-rouge&quot;&gt;s&lt;/code&gt; command i.e. &lt;code class=&quot;highlighter-rouge&quot;&gt;s///e&lt;/code&gt;. The &lt;code class=&quot;highlighter-rouge&quot;&gt;e&lt;/code&gt;
modifier evaluates the replacement part as perl code.&lt;/p&gt;

&lt;p&gt;In the replacement &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;$1,$2,&quot;&lt;/code&gt; is just creating a string of the first 2 
capture groups followed by commas.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; is the string concatenation operator like &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;foo&quot; + &quot;bar&quot;&lt;/code&gt; in Python.
To the string we are adding &lt;code class=&quot;highlighter-rouge&quot;&gt;$3=~s\/,\/\/gr&lt;/code&gt; which is actually another 
&lt;code class=&quot;highlighter-rouge&quot;&gt;s///&lt;/code&gt; command embedded inside. This is why the &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; are escaped although
we could have chosen a different delimiter e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;s|,||gr&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This removes all commas from &lt;code class=&quot;highlighter-rouge&quot;&gt;$3&lt;/code&gt; which is the revenue amount. Without
the &lt;code class=&quot;highlighter-rouge&quot;&gt;g&lt;/code&gt; modifier it would just remove the first similar to 
&lt;code class=&quot;highlighter-rouge&quot;&gt;.replace(',', '', 1)&lt;/code&gt; in Python.&lt;/p&gt;

&lt;p&gt;By default the &lt;code class=&quot;highlighter-rouge&quot;&gt;s///&lt;/code&gt; command does not return the modified string. In 
order to do that you must use the &lt;code class=&quot;highlighter-rouge&quot;&gt;r&lt;/code&gt; modifier.&lt;/p&gt;

&lt;p&gt;So this means the final string we have in our replacement is 
&lt;em&gt;“rank,name,revenue with commas removed”&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;a-different-approach&quot;&gt;a different approach&lt;/h2&gt;

&lt;p&gt;If we take another look at an input line can we see another way to
achieve the intended output?&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;10AT&amp;amp;T$146,801
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If we removed the last comma in the string replace the &lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt;
with a comma and added a comma after the rank number we would
get the current expected output:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;perl -pe &lt;span class=&quot;s1&quot;&gt;'s/.+\K,//; s/\$/,/; s/\d+\K/,/'&lt;/span&gt; not-quite.csv 
10,AT&amp;amp;T,146801
11,General Electric,140389
12,AmerisourceBergen,135962
13,Verizon,131620
14,Chevron,131118
15,Costco,116199
16,Fannie Mae,110359
17,Kroger,109830
18,Amazon.com,107006
19,Walgreens Boots Alliance,103444
20,HP,103355
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;s/.+\K,//&lt;/code&gt; removes the last comma in the string. Using capture 
groups you could write it as &lt;code class=&quot;highlighter-rouge&quot;&gt;s/(.+),/$1/&lt;/code&gt; which may look more 
familiar.&lt;/p&gt;

&lt;p&gt;Anything to the left of &lt;code class=&quot;highlighter-rouge&quot;&gt;\K&lt;/code&gt; is not included in the match which 
can be useful in simplifying patterns.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;s/\$/,/&lt;/code&gt; replaces dollar sign with a comma. We could be more strict
and use the &lt;code class=&quot;highlighter-rouge&quot;&gt;.+\K\$&lt;/code&gt; approach to stipulate it’s the last dollar sign
but there are no other instances of it in our data.&lt;/p&gt;

&lt;p&gt;Finally &lt;code class=&quot;highlighter-rouge&quot;&gt;s/\d+\K/,/&lt;/code&gt; adds a comma after the first sequence of 
digits.&lt;/p&gt;

&lt;p&gt;This approach makes assumptions about the data as it only strips
the last comma. If the revenue amount was larger and contained 
multiple commas it would break. It does work for the data we were
given and serves as an example approaching the problem from a 
different perspective.&lt;/p&gt;

&lt;h2 id=&quot;redirection&quot;&gt;redirection&lt;/h2&gt;

&lt;p&gt;None of these approaches modify the input file. I find it’s usually
simpler to just use shell redirection to output the result to a new file
e.g.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;perl -pe &lt;span class=&quot;s1&quot;&gt;'s/.+\K,//; s/\$/,/; s/\d+\K/,/'&lt;/span&gt; not-quite.csv &amp;gt; fortune500.csv
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Do note that redirections are set up before command execution so the
output filename must differ from the input filename.&lt;/p&gt;

&lt;p&gt;You could however use perl’s &lt;code class=&quot;highlighter-rouge&quot;&gt;-i&lt;/code&gt; option and pass &lt;code class=&quot;highlighter-rouge&quot;&gt;inplace=True&lt;/code&gt; to 
&lt;code class=&quot;highlighter-rouge&quot;&gt;fileinput.input()&lt;/code&gt; in the Python example if you wished to do so.&lt;/p&gt;

</description>
        <pubDate>Sun, 09 Apr 2017 06:00:43 +0100</pubDate>
        <link>http://kaijento.github.io/2017/04/09/python-fixing-broken-csv-data/</link>
        <guid isPermaLink="true">http://kaijento.github.io/2017/04/09/python-fixing-broken-csv-data/</guid>
        
        <category>python</category>
        
        <category>csv</category>
        
        <category>regex</category>
        
        <category>perl</category>
        
        
      </item>
    
      <item>
        <title>BeautifulSoup: find_previous()</title>
        <description>&lt;p&gt;Given the following sample html we want to create a list of stories
where each story is a dict with the keys &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;date&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;content&lt;/code&gt; 
using &lt;code class=&quot;highlighter-rouge&quot;&gt;BeautifulSoup&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Newssite&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;This is news story 1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h3&amp;gt;&lt;/span&gt;28.01 2017&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;content&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      This is a news story
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;This is news story 2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h3&amp;gt;&lt;/span&gt;29.01 2017&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;content&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    This is another news story
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We could find each &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tag move forwards however as this is sample HTML
we’ve been given it is possible there may be other &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tags that are not
story titles.&lt;/p&gt;

&lt;p&gt;In that case it seems like the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;p class=&quot;content&quot;&amp;gt;&lt;/code&gt; tags would be a better
choice. We can use &lt;code class=&quot;highlighter-rouge&quot;&gt;soup.find_all('p', {'class': 'content'})&lt;/code&gt; to isolate those
or we can use the shorthand syntax &lt;code class=&quot;highlighter-rouge&quot;&gt;soup('p', 'class')&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The default method if none is given is &lt;code class=&quot;highlighter-rouge&quot;&gt;find_all()&lt;/code&gt; and if a 2nd argument is
given to either find method it is matched against the class attribute.&lt;/p&gt;

&lt;p&gt;If you prefer to work with CSS selectors you could also use &lt;code class=&quot;highlighter-rouge&quot;&gt;soup.select('p.content')&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;So let’s take a look at some code:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;list-of-stories.py&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt;   &lt;span class=&quot;nn&quot;&gt;bs4&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'''
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;Newssite&amp;lt;/title&amp;gt;
  &amp;lt;/head&amp;gt;
  &amp;lt;body&amp;gt;
    &amp;lt;h1&amp;gt;This is news story 1&amp;lt;/h1&amp;gt;
    &amp;lt;h3&amp;gt;28.01 2017&amp;lt;/h3&amp;gt;
    &amp;lt;p class=&quot;content&quot;&amp;gt;
      This is a news story
    &amp;lt;/p&amp;gt;
    &amp;lt;h1&amp;gt;This is news story 2&amp;lt;/h1&amp;gt;
    &amp;lt;h3&amp;gt;29.01 2017&amp;lt;/h3&amp;gt;
    &amp;lt;p class=&quot;content&quot;&amp;gt;
    This is another news story
    &amp;lt;/p&amp;gt;
  &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
'''&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BeautifulSoup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'html5lib'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;stories&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_previous&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'h1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_previous&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'h3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'p'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'content'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dumps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sort_keys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The declaration of &lt;code class=&quot;highlighter-rouge&quot;&gt;stories&lt;/code&gt; make look a little odd it’s a &lt;em&gt;dict comprehension&lt;/em&gt;
inside a &lt;em&gt;list comprehension&lt;/em&gt;. It may be more common to see it written as:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;stories&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;soup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'p'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'content'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;story&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'title'&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_previous&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'h1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'date'&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_previous&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'h3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'content'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;stories&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;story&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So we find each &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;p class=&quot;content&quot;&amp;gt;&lt;/code&gt; tag and from there we search backwards
using &lt;code class=&quot;highlighter-rouge&quot;&gt;find_previous()&lt;/code&gt; for the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; title tag and the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;h3&amp;gt;&lt;/code&gt; date tag.&lt;/p&gt;

&lt;p&gt;This is what the output looks like:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;python list-of-stories.py 
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;content&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;This is a news story&quot;&lt;/span&gt;, 
        &lt;span class=&quot;s2&quot;&gt;&quot;date&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;28.01 2017&quot;&lt;/span&gt;, 
        &lt;span class=&quot;s2&quot;&gt;&quot;title&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;This is news story 1&quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;, 
    &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;content&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;This is another news story&quot;&lt;/span&gt;, 
        &lt;span class=&quot;s2&quot;&gt;&quot;date&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;29.01 2017&quot;&lt;/span&gt;, 
        &lt;span class=&quot;s2&quot;&gt;&quot;title&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;This is news story 2&quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;json&lt;/code&gt; module was only used to &lt;em&gt;“pretty-print”&lt;/em&gt; the resulting list
of dicts.&lt;/p&gt;
</description>
        <pubDate>Sat, 08 Apr 2017 07:59:00 +0100</pubDate>
        <link>http://kaijento.github.io/2017/04/08/beautifulsoup-find_previous/</link>
        <guid isPermaLink="true">http://kaijento.github.io/2017/04/08/beautifulsoup-find_previous/</guid>
        
        <category>python</category>
        
        <category>beautifulsoup</category>
        
        
      </item>
    
  </channel>
</rss>
